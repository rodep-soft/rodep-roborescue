[0.000000] (-) TimerEvent: {}
[0.000625] (custom_interfaces) JobQueued: {'identifier': 'custom_interfaces', 'dependencies': OrderedDict([('custom_interfaces', '/root/working/rodep_ros2/yano_ws/install/custom_interfaces')])}
[0.000708] (driver) JobQueued: {'identifier': 'driver', 'dependencies': OrderedDict([('custom_interfaces', '/root/working/rodep_ros2/yano_ws/install/custom_interfaces'), ('driver', '/root/working/rodep_ros2/yano_ws/install/driver')])}
[0.000970] (operator) JobQueued: {'identifier': 'operator', 'dependencies': OrderedDict([('custom_interfaces', '/root/working/rodep_ros2/yano_ws/install/custom_interfaces'), ('operator', '/root/working/rodep_ros2/yano_ws/install/operator')])}
[0.001016] (custom_interfaces) JobStarted: {'identifier': 'custom_interfaces'}
[0.034188] (custom_interfaces) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/root/working/rodep_ros2/yano_ws/build/custom_interfaces', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'root'), ('HOSTNAME', 'cf33789d9224'), ('SHLVL', '4'), ('LD_LIBRARY_PATH', '/root/working/rodep_ros2/yano_ws/install/custom_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('OLDPWD', '/root/working'), ('HOME', '/root'), ('ROS_PYTHON_VERSION', '3'), ('ROS_DISTRO', 'humble'), ('ROS_VERSION', '2'), ('TERM', 'xterm'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'), ('LANG', 'C.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('AMENT_PREFIX_PATH', '/root/working/rodep_ros2/yano_ws/install/custom_interfaces:/opt/ros/humble'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('PWD', '/root/working/rodep_ros2/yano_ws/build/custom_interfaces'), ('LC_ALL', 'C.UTF-8'), ('PYTHONPATH', '/root/working/rodep_ros2/yano_ws/install/custom_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/root/working/rodep_ros2/yano_ws/install/custom_interfaces')]), 'shell': False}
[0.046790] (custom_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/root/working/rodep_ros2/yano_ws/build/custom_interfaces/CTestConfiguration.ini\n'}
[0.047193] (custom_interfaces) StdoutLine: {'line': b'Parse Config file:/root/working/rodep_ros2/yano_ws/build/custom_interfaces/CTestConfiguration.ini\n'}
[0.047476] (custom_interfaces) StdoutLine: {'line': b'   Site: cf33789d9224\n'}
[0.047673] (custom_interfaces) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.047800] (custom_interfaces) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.047935] (custom_interfaces) StdoutLine: {'line': b'Create new tag: 20250307-1049 - Experimental\n'}
[0.048095] (custom_interfaces) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/root/working/rodep_ros2/yano_ws/build/custom_interfaces/CTestConfiguration.ini\n'}
[0.048461] (custom_interfaces) StdoutLine: {'line': b'Parse Config file:/root/working/rodep_ros2/yano_ws/build/custom_interfaces/CTestConfiguration.ini\n'}
[0.048608] (custom_interfaces) StdoutLine: {'line': b'Test project /root/working/rodep_ros2/yano_ws/build/custom_interfaces\n'}
[0.048770] (custom_interfaces) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.048888] (custom_interfaces) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.049003] (custom_interfaces) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.049127] (custom_interfaces) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.049255] (custom_interfaces) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.049363] (custom_interfaces) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.049430] (custom_interfaces) StdoutLine: {'line': b'test 1\n'}
[0.049494] (custom_interfaces) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.049558] (custom_interfaces) StdoutLine: {'line': b'\n'}
[0.049624] (custom_interfaces) StdoutLine: {'line': b'1: Test command: /usr/bin/python3 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/root/working/rodep_ros2/yano_ws/build/custom_interfaces/test_results/custom_interfaces/lint_cmake.xunit.xml" "--package-name" "custom_interfaces" "--output-file" "/root/working/rodep_ros2/yano_ws/build/custom_interfaces/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/root/working/rodep_ros2/yano_ws/build/custom_interfaces/test_results/custom_interfaces/lint_cmake.xunit.xml"\n'}
[0.049696] (custom_interfaces) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.099522] (-) TimerEvent: {}
[0.124509] (custom_interfaces) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/root/working/rodep_ros2/yano_ws/custom_interfaces':\n"}
[0.124694] (custom_interfaces) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /root/working/rodep_ros2/yano_ws/build/custom_interfaces/test_results/custom_interfaces/lint_cmake.xunit.xml\n'}
[0.199623] (-) TimerEvent: {}
[0.212993] (custom_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:17: Tab found; please use spaces [whitespace/tabs]\n'}
[0.213261] (custom_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:18: Tab found; please use spaces [whitespace/tabs]\n'}
[0.213345] (custom_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:22: Tab found; please use spaces [whitespace/tabs]\n'}
[0.213435] (custom_interfaces) StdoutLine: {'line': b'1: CMakeLists.txt:23: Tab found; please use spaces [whitespace/tabs]\n'}
[0.213502] (custom_interfaces) StdoutLine: {'line': b'1: \n'}
[0.213568] (custom_interfaces) StdoutLine: {'line': b'1: \n'}
[0.213632] (custom_interfaces) StdoutLine: {'line': b'1: 4 errors\n'}
[0.225347] (custom_interfaces) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.225729] (custom_interfaces) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/root/working/rodep_ros2/yano_ws/build/custom_interfaces/test_results/custom_interfaces/lint_cmake.xunit.xml'\n"}
[0.236005] (custom_interfaces) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................***Failed    0.19 sec\n'}
[0.236404] (custom_interfaces) StdoutLine: {'line': b'test 2\n'}
[0.236588] (custom_interfaces) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.236769] (custom_interfaces) StdoutLine: {'line': b'\n'}
[0.236926] (custom_interfaces) StdoutLine: {'line': b'2: Test command: /usr/bin/python3 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/root/working/rodep_ros2/yano_ws/build/custom_interfaces/test_results/custom_interfaces/xmllint.xunit.xml" "--package-name" "custom_interfaces" "--output-file" "/root/working/rodep_ros2/yano_ws/build/custom_interfaces/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/root/working/rodep_ros2/yano_ws/build/custom_interfaces/test_results/custom_interfaces/xmllint.xunit.xml"\n'}
[0.237011] (custom_interfaces) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.299755] (-) TimerEvent: {}
[0.314692] (custom_interfaces) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/root/working/rodep_ros2/yano_ws/custom_interfaces':\n"}
[0.314927] (custom_interfaces) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /root/working/rodep_ros2/yano_ws/build/custom_interfaces/test_results/custom_interfaces/xmllint.xunit.xml\n'}
[0.399876] (-) TimerEvent: {}
[0.500169] (-) TimerEvent: {}
[0.600616] (-) TimerEvent: {}
[0.700917] (-) TimerEvent: {}
[0.801266] (-) TimerEvent: {}
[0.901642] (-) TimerEvent: {}
[1.002030] (-) TimerEvent: {}
[1.102312] (-) TimerEvent: {}
[1.187740] (custom_interfaces) StdoutLine: {'line': b"2: File 'package.xml' is invalid:\n"}
[1.187967] (custom_interfaces) StdoutLine: {'line': b"2: /root/working/rodep_ros2/yano_ws/custom_interfaces/package.xml:15: element test_depend: Schemas validity error : Element 'test_depend': This element is not expected. Expected is one of ( member_of_group, export ).\n"}
[1.188119] (custom_interfaces) StdoutLine: {'line': b'2: /root/working/rodep_ros2/yano_ws/custom_interfaces/package.xml fails to validate\n'}
[1.188195] (custom_interfaces) StdoutLine: {'line': b'2: \n'}
[1.188267] (custom_interfaces) StdoutLine: {'line': b'2: 1 files are invalid\n'}
[1.201128] (custom_interfaces) StdoutLine: {'line': b'2: -- run_test.py: return code 1\n'}
[1.201503] (custom_interfaces) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/root/working/rodep_ros2/yano_ws/build/custom_interfaces/test_results/custom_interfaces/xmllint.xunit.xml'\n"}
[1.202397] (-) TimerEvent: {}
[1.217608] (custom_interfaces) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................***Failed    0.98 sec\n'}
[1.218087] (custom_interfaces) StdoutLine: {'line': b'\n'}
[1.218252] (custom_interfaces) StdoutLine: {'line': b'0% tests passed\x1b[0;0m, \x1b[0;31m2 tests failed\x1b[0;0m out of 2\n'}
[1.218397] (custom_interfaces) StdoutLine: {'line': b'\n'}
[1.218547] (custom_interfaces) StdoutLine: {'line': b'Label Time Summary:\n'}
[1.218764] (custom_interfaces) StdoutLine: {'line': b'lint_cmake    =   0.19 sec*proc (1 test)\n'}
[1.218887] (custom_interfaces) StdoutLine: {'line': b'linter        =   1.17 sec*proc (2 tests)\n'}
[1.219004] (custom_interfaces) StdoutLine: {'line': b'xmllint       =   0.98 sec*proc (1 test)\n'}
[1.219127] (custom_interfaces) StdoutLine: {'line': b'\n'}
[1.219241] (custom_interfaces) StdoutLine: {'line': b'Total Test time (real) =   1.17 sec\n'}
[1.219371] (custom_interfaces) StdoutLine: {'line': b'\n'}
[1.219484] (custom_interfaces) StdoutLine: {'line': b'The following tests FAILED:\n'}
[1.219607] (custom_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  1 - lint_cmake (Failed)\x1b[0;0m\n'}
[1.219710] (custom_interfaces) StdoutLine: {'line': b'\t\x1b[0;31m  2 - xmllint (Failed)\x1b[0;0m\n'}
[1.220075] (custom_interfaces) StderrLine: {'line': b'Errors while running CTest\n'}
[1.220197] (custom_interfaces) StderrLine: {'line': b'Output from these tests are in: /root/working/rodep_ros2/yano_ws/build/custom_interfaces/Testing/Temporary/LastTest.log\n'}
[1.220279] (custom_interfaces) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[1.223169] (custom_interfaces) CommandEnded: {'returncode': 8}
[1.224877] (custom_interfaces) TestFailure: {'identifier': 'custom_interfaces'}
[1.224992] (custom_interfaces) JobEnded: {'identifier': 'custom_interfaces', 'rc': 0}
[1.226468] (driver) JobStarted: {'identifier': 'driver'}
[1.232548] (operator) JobStarted: {'identifier': 'operator'}
[1.259468] (driver) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/root/working/rodep_ros2/yano_ws/build/driver', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'root'), ('HOSTNAME', 'cf33789d9224'), ('SHLVL', '4'), ('LD_LIBRARY_PATH', '/root/working/rodep_ros2/yano_ws/install/custom_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('OLDPWD', '/root/working'), ('HOME', '/root'), ('ROS_PYTHON_VERSION', '3'), ('ROS_DISTRO', 'humble'), ('ROS_VERSION', '2'), ('TERM', 'xterm'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'), ('LANG', 'C.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('AMENT_PREFIX_PATH', '/root/working/rodep_ros2/yano_ws/install/driver:/root/working/rodep_ros2/yano_ws/install/custom_interfaces:/opt/ros/humble'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('PWD', '/root/working/rodep_ros2/yano_ws/build/driver'), ('LC_ALL', 'C.UTF-8'), ('PYTHONPATH', '/root/working/rodep_ros2/yano_ws/install/custom_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/root/working/rodep_ros2/yano_ws/install/driver:/root/working/rodep_ros2/yano_ws/install/custom_interfaces')]), 'shell': False}
[1.266515] (operator) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/root/working/rodep_ros2/yano_ws/build/operator', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'root'), ('HOSTNAME', 'cf33789d9224'), ('SHLVL', '4'), ('LD_LIBRARY_PATH', '/root/working/rodep_ros2/yano_ws/install/custom_interfaces/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('OLDPWD', '/root/working'), ('HOME', '/root'), ('ROS_PYTHON_VERSION', '3'), ('ROS_DISTRO', 'humble'), ('ROS_VERSION', '2'), ('TERM', 'xterm'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'), ('LANG', 'C.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('AMENT_PREFIX_PATH', '/root/working/rodep_ros2/yano_ws/install/operator:/root/working/rodep_ros2/yano_ws/install/custom_interfaces:/opt/ros/humble'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('PWD', '/root/working/rodep_ros2/yano_ws/build/operator'), ('LC_ALL', 'C.UTF-8'), ('PYTHONPATH', '/root/working/rodep_ros2/yano_ws/install/custom_interfaces/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/root/working/rodep_ros2/yano_ws/install/operator:/root/working/rodep_ros2/yano_ws/install/custom_interfaces')]), 'shell': False}
[1.272172] (driver) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/root/working/rodep_ros2/yano_ws/build/driver/CTestConfiguration.ini\n'}
[1.272435] (driver) StdoutLine: {'line': b'Parse Config file:/root/working/rodep_ros2/yano_ws/build/driver/CTestConfiguration.ini\n'}
[1.274020] (driver) StdoutLine: {'line': b'   Site: cf33789d9224\n'}
[1.274261] (driver) StdoutLine: {'line': b'   Build name: (empty)\n'}
[1.274421] (driver) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[1.274574] (driver) StdoutLine: {'line': b'Create new tag: 20250307-1049 - Experimental\n'}
[1.274740] (driver) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/root/working/rodep_ros2/yano_ws/build/driver/CTestConfiguration.ini\n'}
[1.274895] (driver) StdoutLine: {'line': b'Parse Config file:/root/working/rodep_ros2/yano_ws/build/driver/CTestConfiguration.ini\n'}
[1.275059] (driver) StdoutLine: {'line': b'Test project /root/working/rodep_ros2/yano_ws/build/driver\n'}
[1.275219] (driver) StdoutLine: {'line': b'Constructing a list of tests\n'}
[1.275437] (driver) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[1.275687] (driver) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[1.275835] (driver) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[1.275992] (driver) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[1.276134] (driver) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[1.276273] (driver) StdoutLine: {'line': b'test 1\n'}
[1.276422] (driver) StdoutLine: {'line': b'    Start 1: cppcheck\n'}
[1.276575] (driver) StdoutLine: {'line': b'\n'}
[1.276711] (driver) StdoutLine: {'line': b'1: Test command: /usr/bin/python3 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/root/working/rodep_ros2/yano_ws/build/driver/test_results/driver/cppcheck.xunit.xml" "--package-name" "driver" "--output-file" "/root/working/rodep_ros2/yano_ws/build/driver/ament_cppcheck/cppcheck.txt" "--command" "/opt/ros/humble/bin/ament_cppcheck" "--xunit-file" "/root/working/rodep_ros2/yano_ws/build/driver/test_results/driver/cppcheck.xunit.xml"\n'}
[1.276878] (driver) StdoutLine: {'line': b'1: Test timeout computed to be: 300\n'}
[1.277324] (operator) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/root/working/rodep_ros2/yano_ws/build/operator/CTestConfiguration.ini\n'}
[1.277602] (operator) StdoutLine: {'line': b'Parse Config file:/root/working/rodep_ros2/yano_ws/build/operator/CTestConfiguration.ini\n'}
[1.277757] (operator) StdoutLine: {'line': b'   Site: cf33789d9224\n'}
[1.277952] (operator) StdoutLine: {'line': b'   Build name: (empty)\n'}
[1.278156] (operator) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[1.278375] (operator) StdoutLine: {'line': b'Create new tag: 20250307-1049 - Experimental\n'}
[1.278501] (operator) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/root/working/rodep_ros2/yano_ws/build/operator/CTestConfiguration.ini\n'}
[1.278659] (operator) StdoutLine: {'line': b'Parse Config file:/root/working/rodep_ros2/yano_ws/build/operator/CTestConfiguration.ini\n'}
[1.278788] (operator) StdoutLine: {'line': b'Test project /root/working/rodep_ros2/yano_ws/build/operator\n'}
[1.278908] (operator) StdoutLine: {'line': b'Constructing a list of tests\n'}
[1.279116] (operator) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[1.279276] (operator) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[1.279445] (operator) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[1.279688] (operator) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[1.279836] (operator) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[1.279985] (operator) StdoutLine: {'line': b'test 1\n'}
[1.280103] (operator) StdoutLine: {'line': b'    Start 1: cppcheck\n'}
[1.280216] (operator) StdoutLine: {'line': b'\n'}
[1.280341] (operator) StdoutLine: {'line': b'1: Test command: /usr/bin/python3 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/cppcheck.xunit.xml" "--package-name" "operator" "--output-file" "/root/working/rodep_ros2/yano_ws/build/operator/ament_cppcheck/cppcheck.txt" "--command" "/opt/ros/humble/bin/ament_cppcheck" "--xunit-file" "/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/cppcheck.xunit.xml"\n'}
[1.280465] (operator) StdoutLine: {'line': b'1: Test timeout computed to be: 300\n'}
[1.302507] (-) TimerEvent: {}
[1.381642] (driver) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/root/working/rodep_ros2/yano_ws/src/driver':\n"}
[1.381875] (driver) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_cppcheck --xunit-file /root/working/rodep_ros2/yano_ws/build/driver/test_results/driver/cppcheck.xunit.xml\n'}
[1.386234] (operator) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/root/working/rodep_ros2/yano_ws/src/operator':\n"}
[1.386477] (operator) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_cppcheck --xunit-file /root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/cppcheck.xunit.xml\n'}
[1.402604] (-) TimerEvent: {}
[1.478603] (driver) StdoutLine: {'line': b'1: cppcheck 2.7 has known performance issues and therefore will not be used, set the AMENT_CPPCHECK_ALLOW_SLOW_VERSIONS environment variable to override this.\n'}
[1.484878] (operator) StdoutLine: {'line': b'1: cppcheck 2.7 has known performance issues and therefore will not be used, set the AMENT_CPPCHECK_ALLOW_SLOW_VERSIONS environment variable to override this.\n'}
[1.501138] (operator) StdoutLine: {'line': b'1: -- run_test.py: return code 0\n'}
[1.501449] (driver) StdoutLine: {'line': b'1: -- run_test.py: return code 0\n'}
[1.501614] (driver) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/root/working/rodep_ros2/yano_ws/build/driver/test_results/driver/cppcheck.xunit.xml'\n"}
[1.501738] (operator) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/cppcheck.xunit.xml'\n"}
[1.502711] (-) TimerEvent: {}
[1.518971] (operator) StdoutLine: {'line': b'1/6 Test #1: cppcheck .........................   Passed    0.24 sec\n'}
[1.519530] (driver) StdoutLine: {'line': b'1/4 Test #1: cppcheck .........................   Passed    0.25 sec\n'}
[1.519721] (driver) StdoutLine: {'line': b'test 2\n'}
[1.519847] (driver) StdoutLine: {'line': b'    Start 2: lint_cmake\n'}
[1.520005] (operator) StdoutLine: {'line': b'test 2\n'}
[1.520163] (operator) StdoutLine: {'line': b'    Start 2: flake8\n'}
[1.520312] (operator) StdoutLine: {'line': b'\n'}
[1.520460] (operator) StdoutLine: {'line': b'2: Test command: /usr/bin/python3 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/flake8.xunit.xml" "--package-name" "operator" "--output-file" "/root/working/rodep_ros2/yano_ws/build/operator/ament_flake8/flake8.txt" "--command" "/opt/ros/humble/bin/ament_flake8" "--xunit-file" "/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/flake8.xunit.xml"\n'}
[1.520624] (operator) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[1.520783] (driver) StdoutLine: {'line': b'\n'}
[1.520951] (driver) StdoutLine: {'line': b'2: Test command: /usr/bin/python3 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/root/working/rodep_ros2/yano_ws/build/driver/test_results/driver/lint_cmake.xunit.xml" "--package-name" "driver" "--output-file" "/root/working/rodep_ros2/yano_ws/build/driver/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/root/working/rodep_ros2/yano_ws/build/driver/test_results/driver/lint_cmake.xunit.xml"\n'}
[1.521118] (driver) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[1.589949] (driver) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/root/working/rodep_ros2/yano_ws/src/driver':\n"}
[1.590110] (driver) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /root/working/rodep_ros2/yano_ws/build/driver/test_results/driver/lint_cmake.xunit.xml\n'}
[1.590814] (operator) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/root/working/rodep_ros2/yano_ws/src/operator':\n"}
[1.591040] (operator) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_flake8 --xunit-file /root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/flake8.xunit.xml\n'}
[1.602825] (-) TimerEvent: {}
[1.703177] (-) TimerEvent: {}
[1.716327] (driver) StdoutLine: {'line': b'2: CMakeLists.txt:23: Tab found; please use spaces [whitespace/tabs]\n'}
[1.716494] (driver) StdoutLine: {'line': b'2: CMakeLists.txt:23: Line ends in whitespace [whitespace/eol]\n'}
[1.716572] (driver) StdoutLine: {'line': b'2: \n'}
[1.716644] (driver) StdoutLine: {'line': b'2: \n'}
[1.716707] (driver) StdoutLine: {'line': b'2: 2 errors\n'}
[1.734761] (driver) StdoutLine: {'line': b'2: -- run_test.py: return code 1\n'}
[1.735030] (driver) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/root/working/rodep_ros2/yano_ws/build/driver/test_results/driver/lint_cmake.xunit.xml'\n"}
[1.746284] (driver) StdoutLine: {'line': b'2/4 Test #2: lint_cmake .......................***Failed    0.23 sec\n'}
[1.746622] (driver) StdoutLine: {'line': b'test 3\n'}
[1.746770] (driver) StdoutLine: {'line': b'    Start 3: uncrustify\n'}
[1.746896] (driver) StdoutLine: {'line': b'\n'}
[1.747017] (driver) StdoutLine: {'line': b'3: Test command: /usr/bin/python3 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/root/working/rodep_ros2/yano_ws/build/driver/test_results/driver/uncrustify.xunit.xml" "--package-name" "driver" "--output-file" "/root/working/rodep_ros2/yano_ws/build/driver/ament_uncrustify/uncrustify.txt" "--command" "/opt/ros/humble/bin/ament_uncrustify" "--xunit-file" "/root/working/rodep_ros2/yano_ws/build/driver/test_results/driver/uncrustify.xunit.xml"\n'}
[1.747147] (driver) StdoutLine: {'line': b'3: Test timeout computed to be: 60\n'}
[1.803291] (-) TimerEvent: {}
[1.823878] (driver) StdoutLine: {'line': b"3: -- run_test.py: invoking following command in '/root/working/rodep_ros2/yano_ws/src/driver':\n"}
[1.824149] (driver) StdoutLine: {'line': b'3:  - /opt/ros/humble/bin/ament_uncrustify --xunit-file /root/working/rodep_ros2/yano_ws/build/driver/test_results/driver/uncrustify.xunit.xml\n'}
[1.831850] (operator) StdoutLine: {'line': b'2: def generate_launch_description():\n'}
[1.832948] (operator) StdoutLine: {'line': b'2: ^\n'}
[1.833156] (operator) StdoutLine: {'line': b'2: \treturn LaunchDescription([\n'}
[1.833296] (operator) StdoutLine: {'line': b'2: ^\n'}
[1.833409] (operator) StdoutLine: {'line': b'2:         Node(\n'}
[1.833519] (operator) StdoutLine: {'line': b'2: ^\n'}
[1.833627] (operator) StdoutLine: {'line': b'2:         Node(\n'}
[1.833737] (operator) StdoutLine: {'line': b'2:         ^\n'}
[1.833843] (operator) StdoutLine: {'line': b'2:             package="joy",\n'}
[1.833952] (operator) StdoutLine: {'line': b'2: ^\n'}
[1.834061] (operator) StdoutLine: {'line': b'2:             # namespace="",\n'}
[1.834169] (operator) StdoutLine: {'line': b'2: ^\n'}
[1.834277] (operator) StdoutLine: {'line': b'2:             executable="joy_node",\n'}
[1.834381] (operator) StdoutLine: {'line': b'2: ^\n'}
[1.834485] (operator) StdoutLine: {'line': b'2:             name="pub_joy"\n'}
[1.834588] (operator) StdoutLine: {'line': b'2: ^\n'}
[1.834691] (operator) StdoutLine: {'line': b'2:         ),\n'}
[1.834813] (operator) StdoutLine: {'line': b'2: ^\n'}
[1.834922] (operator) StdoutLine: {'line': b'2: \t\tNode(\n'}
[1.835026] (operator) StdoutLine: {'line': b'2: ^\n'}
[1.835129] (operator) StdoutLine: {'line': b"2: \t\t\tpackage='operator',\n"}
[1.835232] (operator) StdoutLine: {'line': b'2: ^\n'}
[1.835380] (operator) StdoutLine: {'line': b"2: \t\t\texecutable='operator_node',\n"}
[1.835488] (operator) StdoutLine: {'line': b'2: ^\n'}
[1.835592] (operator) StdoutLine: {'line': b"2: \t\t\tname='operator_node',\n"}
[1.835698] (operator) StdoutLine: {'line': b'2: ^\n'}
[1.835803] (operator) StdoutLine: {'line': b"2: \t\t\toutput='screen',\n"}
[1.835905] (operator) StdoutLine: {'line': b'2: ^\n'}
[1.836009] (operator) StdoutLine: {'line': b'2: \t\t),\n'}
[1.836111] (operator) StdoutLine: {'line': b'2: ^\n'}
[1.836251] (operator) StdoutLine: {'line': b'2: \t])\n'}
[1.836358] (operator) StdoutLine: {'line': b'2: ^\n'}
[1.836458] (operator) StdoutLine: {'line': b'2: 6     E101 indentation contains mixed spaces and tabs\n'}
[1.836562] (operator) StdoutLine: {'line': b'2: 1     E122 continuation line missing indentation or outdented\n'}
[1.836667] (operator) StdoutLine: {'line': b'2: 1     E302 expected 2 blank lines, found 1\n'}
[1.836771] (operator) StdoutLine: {'line': b'2: 8     W191 indentation contains tabs\n'}
[1.836875] (operator) StdoutLine: {'line': b'2: \n'}
[1.836980] (operator) StdoutLine: {'line': b'2: ./launch/operator_launch.py:4:1: E302 expected 2 blank lines, found 1\n'}
[1.837087] (operator) StdoutLine: {'line': b'2: \n'}
[1.837188] (operator) StdoutLine: {'line': b'2: ./launch/operator_launch.py:5:1: W191 indentation contains tabs\n'}
[1.837291] (operator) StdoutLine: {'line': b'2: \n'}
[1.837392] (operator) StdoutLine: {'line': b'2: ./launch/operator_launch.py:6:1: E101 indentation contains mixed spaces and tabs\n'}
[1.837499] (operator) StdoutLine: {'line': b'2: \n'}
[1.837603] (operator) StdoutLine: {'line': b'2: ./launch/operator_launch.py:6:9: E122 continuation line missing indentation or outdented\n'}
[1.837720] (operator) StdoutLine: {'line': b'2: \n'}
[1.837829] (operator) StdoutLine: {'line': b'2: ./launch/operator_launch.py:7:1: E101 indentation contains mixed spaces and tabs\n'}
[1.837938] (operator) StdoutLine: {'line': b'2: \n'}
[1.838044] (operator) StdoutLine: {'line': b'2: ./launch/operator_launch.py:8:1: E101 indentation contains mixed spaces and tabs\n'}
[1.838153] (operator) StdoutLine: {'line': b'2: \n'}
[1.838275] (operator) StdoutLine: {'line': b'2: ./launch/operator_launch.py:9:1: E101 indentation contains mixed spaces and tabs\n'}
[1.838379] (operator) StdoutLine: {'line': b'2: \n'}
[1.838481] (operator) StdoutLine: {'line': b'2: ./launch/operator_launch.py:10:1: E101 indentation contains mixed spaces and tabs\n'}
[1.838619] (operator) StdoutLine: {'line': b'2: \n'}
[1.838744] (operator) StdoutLine: {'line': b'2: ./launch/operator_launch.py:11:1: E101 indentation contains mixed spaces and tabs\n'}
[1.838864] (operator) StdoutLine: {'line': b'2: \n'}
[1.838970] (operator) StdoutLine: {'line': b'2: ./launch/operator_launch.py:12:1: W191 indentation contains tabs\n'}
[1.839075] (operator) StdoutLine: {'line': b'2: \n'}
[1.839180] (operator) StdoutLine: {'line': b'2: ./launch/operator_launch.py:13:1: W191 indentation contains tabs\n'}
[1.839286] (operator) StdoutLine: {'line': b'2: \n'}
[1.839401] (operator) StdoutLine: {'line': b'2: ./launch/operator_launch.py:14:1: W191 indentation contains tabs\n'}
[1.839516] (operator) StdoutLine: {'line': b'2: \n'}
[1.839631] (operator) StdoutLine: {'line': b'2: ./launch/operator_launch.py:15:1: W191 indentation contains tabs\n'}
[1.839749] (operator) StdoutLine: {'line': b'2: \n'}
[1.839864] (operator) StdoutLine: {'line': b'2: ./launch/operator_launch.py:16:1: W191 indentation contains tabs\n'}
[1.839977] (operator) StdoutLine: {'line': b'2: \n'}
[1.840093] (operator) StdoutLine: {'line': b'2: ./launch/operator_launch.py:17:1: W191 indentation contains tabs\n'}
[1.840228] (operator) StdoutLine: {'line': b'2: \n'}
[1.840328] (operator) StdoutLine: {'line': b'2: ./launch/operator_launch.py:18:1: W191 indentation contains tabs\n'}
[1.840440] (operator) StdoutLine: {'line': b'2: \n'}
[1.840553] (operator) StdoutLine: {'line': b'2: \n'}
[1.840662] (operator) StdoutLine: {'line': b'2: 1 files checked\n'}
[1.840771] (operator) StdoutLine: {'line': b'2: 16 errors\n'}
[1.840885] (operator) StdoutLine: {'line': b'2: \n'}
[1.840995] (operator) StdoutLine: {'line': b"2: 'E'-type errors: 8\n"}
[1.841101] (operator) StdoutLine: {'line': b"2: 'W'-type errors: 8\n"}
[1.841202] (operator) StdoutLine: {'line': b'2: \n'}
[1.841303] (operator) StdoutLine: {'line': b'2: Checked files:\n'}
[1.841409] (operator) StdoutLine: {'line': b'2: \n'}
[1.841510] (operator) StdoutLine: {'line': b'2: * ./launch/operator_launch.py\n'}
[1.858453] (operator) StdoutLine: {'line': b'2: -- run_test.py: return code 1\n'}
[1.858700] (operator) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/flake8.xunit.xml'\n"}
[1.875849] (operator) StdoutLine: {'line': b'2/6 Test #2: flake8 ...........................***Failed    0.36 sec\n'}
[1.876222] (operator) StdoutLine: {'line': b'test 3\n'}
[1.876396] (operator) StdoutLine: {'line': b'    Start 3: lint_cmake\n'}
[1.876550] (operator) StdoutLine: {'line': b'\n'}
[1.876642] (operator) StdoutLine: {'line': b'3: Test command: /usr/bin/python3 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/lint_cmake.xunit.xml" "--package-name" "operator" "--output-file" "/root/working/rodep_ros2/yano_ws/build/operator/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/lint_cmake.xunit.xml"\n'}
[1.876719] (operator) StdoutLine: {'line': b'3: Test timeout computed to be: 60\n'}
[1.903392] (-) TimerEvent: {}
[1.972968] (operator) StdoutLine: {'line': b"3: -- run_test.py: invoking following command in '/root/working/rodep_ros2/yano_ws/src/operator':\n"}
[1.973153] (operator) StdoutLine: {'line': b'3:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/lint_cmake.xunit.xml\n'}
[1.978239] (driver) StdoutLine: {'line': b"3: Code style divergence in file 'src/driver.cpp':\n"}
[1.978476] (driver) StdoutLine: {'line': b'3: \n'}
[1.978620] (driver) StdoutLine: {'line': b'3: --- src/driver.cpp\n'}
[1.978747] (driver) StdoutLine: {'line': b'3: +++ src/driver.cpp.uncrustify\n'}
[1.978857] (driver) StdoutLine: {'line': b'3: @@ -6 +6 @@\n'}
[1.978962] (driver) StdoutLine: {'line': b'3: -#include <std_msgs/msg/bool.hpp> \n'}
[1.979079] (driver) StdoutLine: {'line': b'3: +#include <std_msgs/msg/bool.hpp>\n'}
[1.979184] (driver) StdoutLine: {'line': b'3: @@ -27 +27,2 @@\n'}
[1.979287] (driver) StdoutLine: {'line': b'3: -class RoboclawDriver {\n'}
[1.979391] (driver) StdoutLine: {'line': b'3: +class RoboclawDriver\n'}
[1.979508] (driver) StdoutLine: {'line': b'3: +{\n'}
[1.979614] (driver) StdoutLine: {'line': b'3: @@ -29,34 +30,39 @@\n'}
[1.979719] (driver) StdoutLine: {'line': b'3: -    explicit RoboclawDriver(const string& port) : io(), serial(io, port) {\n'}
[1.979832] (driver) StdoutLine: {'line': b'3: -        try {\n'}
[1.979934] (driver) StdoutLine: {'line': b'3: -            serial.set_option(serial_port_base::baud_rate(SERIAL_BAUD_RATE));\n'}
[1.980040] (driver) StdoutLine: {'line': b'3: -            serial.set_option(serial_port_base::character_size(8));\n'}
[1.980145] (driver) StdoutLine: {'line': b'3: -            serial.set_option(serial_port_base::parity(serial_port_base::parity::none));\n'}
[1.980249] (driver) StdoutLine: {'line': b'3: -            serial.set_option(serial_port_base::stop_bits(serial_port_base::stop_bits::one));\n'}
[1.980354] (driver) StdoutLine: {'line': b'3: -            serial.set_option(serial_port_base::flow_control(serial_port_base::flow_control::none));\n'}
[1.980461] (driver) StdoutLine: {'line': b'3: -        } catch (const boost::system::system_error& e) {\n'}
[1.980569] (driver) StdoutLine: {'line': b'3: -            throw runtime_error("Failed to configure serial port: " + string(e.what()));\n'}
[1.980682] (driver) StdoutLine: {'line': b'3: -        }\n'}
[1.980797] (driver) StdoutLine: {'line': b'3: -    }\n'}
[1.980907] (driver) StdoutLine: {'line': b'3: -\n'}
[1.981015] (driver) StdoutLine: {'line': b'3: -    bool setMotorVelocity(int command, double counts_per_sec) {\n'}
[1.981124] (driver) StdoutLine: {'line': b'3: -        vector<uint8_t> data = {ROBOCLAW_ADDRESS, static_cast<uint8_t>(command)};\n'}
[1.981227] (driver) StdoutLine: {'line': b'3: -        appendInt32(data, static_cast<int>(counts_per_sec));\n'}
[1.981339] (driver) StdoutLine: {'line': b'3: -        appendCRC(data);\n'}
[1.981463] (driver) StdoutLine: {'line': b'3: -        return sendRoboclawCommand(data);\n'}
[1.982925] (driver) StdoutLine: {'line': b'3: -    }\n'}
[1.983099] (driver) StdoutLine: {'line': b'3: -\n'}
[1.983222] (driver) StdoutLine: {'line': b'3: -    bool setPIDConstants(int command, int K_p, int K_i, int K_d, int qpps) {\n'}
[1.983333] (driver) StdoutLine: {'line': b'3: -        vector<uint8_t> data = {ROBOCLAW_ADDRESS, static_cast<uint8_t>(command)};\n'}
[1.983441] (driver) StdoutLine: {'line': b'3: -        appendInt32(data, K_d);\n'}
[1.983549] (driver) StdoutLine: {'line': b'3: -        appendInt32(data, K_p);\n'}
[1.983655] (driver) StdoutLine: {'line': b'3: -        appendInt32(data, K_i);\n'}
[1.983760] (driver) StdoutLine: {'line': b'3: -        appendInt32(data, qpps);\n'}
[1.983868] (driver) StdoutLine: {'line': b'3: -        appendCRC(data);\n'}
[1.983971] (driver) StdoutLine: {'line': b'3: -        return sendRoboclawCommand(data);\n'}
[1.984077] (driver) StdoutLine: {'line': b'3: -    }\n'}
[1.984176] (driver) StdoutLine: {'line': b'3: -\n'}
[1.984279] (driver) StdoutLine: {'line': b'3: -    bool resetEncoders() {\n'}
[1.984385] (driver) StdoutLine: {'line': b'3: -        vector<uint8_t> data = {ROBOCLAW_ADDRESS, RESET_QUAD_ENCODER};\n'}
[1.984504] (driver) StdoutLine: {'line': b'3: -        appendCRC(data);\n'}
[1.984613] (driver) StdoutLine: {'line': b'3: -        return sendRoboclawCommand(data);\n'}
[1.984729] (driver) StdoutLine: {'line': b'3: -    }\n'}
[1.984835] (driver) StdoutLine: {'line': b'3: +  explicit RoboclawDriver(const string & port)\n'}
[1.984945] (driver) StdoutLine: {'line': b'3: +  : io(), serial(io, port)\n'}
[1.985043] (driver) StdoutLine: {'line': b'3: +  {\n'}
[1.985139] (driver) StdoutLine: {'line': b'3: +    try {\n'}
[1.985236] (driver) StdoutLine: {'line': b'3: +      serial.set_option(serial_port_base::baud_rate(SERIAL_BAUD_RATE));\n'}
[1.985389] (driver) StdoutLine: {'line': b'3: +      serial.set_option(serial_port_base::character_size(8));\n'}
[1.985496] (driver) StdoutLine: {'line': b'3: +      serial.set_option(serial_port_base::parity(serial_port_base::parity::none));\n'}
[1.985609] (driver) StdoutLine: {'line': b'3: +      serial.set_option(serial_port_base::stop_bits(serial_port_base::stop_bits::one));\n'}
[1.985712] (driver) StdoutLine: {'line': b'3: +      serial.set_option(serial_port_base::flow_control(serial_port_base::flow_control::none));\n'}
[1.985822] (driver) StdoutLine: {'line': b'3: +    } catch (const boost::system::system_error & e) {\n'}
[1.985926] (driver) StdoutLine: {'line': b'3: +      throw runtime_error("Failed to configure serial port: " + string(e.what()));\n'}
[1.986028] (driver) StdoutLine: {'line': b'3: +    }\n'}
[1.986132] (driver) StdoutLine: {'line': b'3: +  }\n'}
[1.986236] (driver) StdoutLine: {'line': b'3: +\n'}
[1.986340] (driver) StdoutLine: {'line': b'3: +  bool setMotorVelocity(int command, double counts_per_sec)\n'}
[1.986443] (driver) StdoutLine: {'line': b'3: +  {\n'}
[1.986545] (driver) StdoutLine: {'line': b'3: +    vector<uint8_t> data = {ROBOCLAW_ADDRESS, static_cast<uint8_t>(command)};\n'}
[1.986664] (driver) StdoutLine: {'line': b'3: +    appendInt32(data, static_cast<int>(counts_per_sec));\n'}
[1.986777] (driver) StdoutLine: {'line': b'3: +    appendCRC(data);\n'}
[1.986891] (driver) StdoutLine: {'line': b'3: +    return sendRoboclawCommand(data);\n'}
[1.986993] (driver) StdoutLine: {'line': b'3: +  }\n'}
[1.987094] (driver) StdoutLine: {'line': b'3: +\n'}
[1.987197] (driver) StdoutLine: {'line': b'3: +  bool setPIDConstants(int command, int K_p, int K_i, int K_d, int qpps)\n'}
[1.987304] (driver) StdoutLine: {'line': b'3: +  {\n'}
[1.987415] (driver) StdoutLine: {'line': b'3: +    vector<uint8_t> data = {ROBOCLAW_ADDRESS, static_cast<uint8_t>(command)};\n'}
[1.987528] (driver) StdoutLine: {'line': b'3: +    appendInt32(data, K_d);\n'}
[1.987639] (driver) StdoutLine: {'line': b'3: +    appendInt32(data, K_p);\n'}
[1.987747] (driver) StdoutLine: {'line': b'3: +    appendInt32(data, K_i);\n'}
[1.987855] (driver) StdoutLine: {'line': b'3: +    appendInt32(data, qpps);\n'}
[1.987961] (driver) StdoutLine: {'line': b'3: +    appendCRC(data);\n'}
[1.988069] (driver) StdoutLine: {'line': b'3: +    return sendRoboclawCommand(data);\n'}
[1.988175] (driver) StdoutLine: {'line': b'3: +  }\n'}
[1.988278] (driver) StdoutLine: {'line': b'3: +\n'}
[1.988383] (driver) StdoutLine: {'line': b'3: +  bool resetEncoders()\n'}
[1.988491] (driver) StdoutLine: {'line': b'3: +  {\n'}
[1.988647] (driver) StdoutLine: {'line': b'3: +    vector<uint8_t> data = {ROBOCLAW_ADDRESS, RESET_QUAD_ENCODER};\n'}
[1.988783] (driver) StdoutLine: {'line': b'3: +    appendCRC(data);\n'}
[1.988895] (driver) StdoutLine: {'line': b'3: +    return sendRoboclawCommand(data);\n'}
[1.989006] (driver) StdoutLine: {'line': b'3: +  }\n'}
[1.989114] (driver) StdoutLine: {'line': b'3: @@ -65,39 +71,45 @@\n'}
[1.989223] (driver) StdoutLine: {'line': b'3: -    io_service io;\n'}
[1.989331] (driver) StdoutLine: {'line': b'3: -    serial_port serial;\n'}
[1.989438] (driver) StdoutLine: {'line': b'3: -\n'}
[1.989544] (driver) StdoutLine: {'line': b'3: -    bool sendRoboclawCommand(const vector<uint8_t>& data) {\n'}
[1.989654] (driver) StdoutLine: {'line': b'3: -        try {\n'}
[1.989765] (driver) StdoutLine: {'line': b'3: -            write(serial, buffer(data));\n'}
[1.989873] (driver) StdoutLine: {'line': b'3: -            uint8_t response;\n'}
[1.989983] (driver) StdoutLine: {'line': b'3: -            read(serial, buffer(&response, 1));\n'}
[1.990088] (driver) StdoutLine: {'line': b'3: -            RCLCPP_DEBUG(rclcpp::get_logger("RoboclawDriver"), "Received Response: 0x%02X", response);\n'}
[1.990197] (driver) StdoutLine: {'line': b'3: -            return true;\n'}
[1.990304] (driver) StdoutLine: {'line': b'3: -        } catch (const boost::system::system_error& e) {\n'}
[1.990404] (driver) StdoutLine: {'line': b'3: -            RCLCPP_ERROR(rclcpp::get_logger("RoboclawDriver"), "Serial Communication Error: %s", e.what());\n'}
[1.990512] (driver) StdoutLine: {'line': b'3: -            return false;\n'}
[1.990607] (driver) StdoutLine: {'line': b'3: -        }\n'}
[1.990695] (driver) StdoutLine: {'line': b'3: -    }\n'}
[1.990783] (driver) StdoutLine: {'line': b'3: -\n'}
[1.990878] (driver) StdoutLine: {'line': b'3: -    uint16_t calculateCRC(const vector<uint8_t>& data) {\n'}
[1.990978] (driver) StdoutLine: {'line': b'3: -        uint16_t crc = 0;\n'}
[1.991077] (driver) StdoutLine: {'line': b'3: -        for (auto byte : data) {\n'}
[1.991175] (driver) StdoutLine: {'line': b'3: -            crc ^= static_cast<uint16_t>(byte) << 8;\n'}
[1.991276] (driver) StdoutLine: {'line': b'3: -            for (int i = 0; i < 8; i++) {\n'}
[1.991399] (driver) StdoutLine: {'line': b'3: -                crc = (crc & 0x8000) ? (crc << 1) ^ 0x1021 : (crc << 1);\n'}
[1.991511] (driver) StdoutLine: {'line': b'3: -            }\n'}
[1.991614] (driver) StdoutLine: {'line': b'3: -        }\n'}
[1.991723] (driver) StdoutLine: {'line': b'3: -        return crc;\n'}
[1.991830] (driver) StdoutLine: {'line': b'3: -    }\n'}
[1.991965] (driver) StdoutLine: {'line': b'3: -\n'}
[1.992094] (driver) StdoutLine: {'line': b'3: -    // CRC\xe8\xbf\xbd\xe5\x8a\xa0\n'}
[1.992214] (driver) StdoutLine: {'line': b'3: -    void appendCRC(vector<uint8_t>& data) {\n'}
[1.992327] (driver) StdoutLine: {'line': b'3: -        uint16_t crc = calculateCRC(data);\n'}
[1.992435] (driver) StdoutLine: {'line': b'3: -        data.push_back(static_cast<uint8_t>(crc >> 8));\n'}
[1.992546] (driver) StdoutLine: {'line': b'3: -        data.push_back(static_cast<uint8_t>(crc & 0xFF));\n'}
[1.992658] (driver) StdoutLine: {'line': b'3: -    }\n'}
[1.992764] (driver) StdoutLine: {'line': b'3: -\n'}
[1.992876] (driver) StdoutLine: {'line': b'3: -    void appendInt32(vector<uint8_t>& data, int value) {\n'}
[1.992988] (driver) StdoutLine: {'line': b'3: -        for (int i = 3; i >= 0; --i) {\n'}
[1.993105] (driver) StdoutLine: {'line': b'3: -            data.push_back(static_cast<uint8_t>((value >> (8 * i)) & 0xFF));\n'}
[1.993221] (driver) StdoutLine: {'line': b'3: -        }\n'}
[1.993332] (driver) StdoutLine: {'line': b'3: -    }\n'}
[1.993439] (driver) StdoutLine: {'line': b'3: +  io_service io;\n'}
[1.993545] (driver) StdoutLine: {'line': b'3: +  serial_port serial;\n'}
[1.993657] (driver) StdoutLine: {'line': b'3: +\n'}
[1.993768] (driver) StdoutLine: {'line': b'3: +  bool sendRoboclawCommand(const vector<uint8_t> & data)\n'}
[1.993874] (driver) StdoutLine: {'line': b'3: +  {\n'}
[1.993977] (driver) StdoutLine: {'line': b'3: +    try {\n'}
[1.994087] (driver) StdoutLine: {'line': b'3: +      write(serial, buffer(data));\n'}
[1.994212] (driver) StdoutLine: {'line': b'3: +      uint8_t response;\n'}
[1.994319] (driver) StdoutLine: {'line': b'3: +      read(serial, buffer(&response, 1));\n'}
[1.994417] (driver) StdoutLine: {'line': b'3: +      RCLCPP_DEBUG(rclcpp::get_logger("RoboclawDriver"), "Received Response: 0x%02X", response);\n'}
[1.994518] (driver) StdoutLine: {'line': b'3: +      return true;\n'}
[1.994657] (driver) StdoutLine: {'line': b'3: +    } catch (const boost::system::system_error & e) {\n'}
[1.994798] (driver) StdoutLine: {'line': b'3: +      RCLCPP_ERROR(\n'}
[1.994936] (driver) StdoutLine: {'line': b'3: +        rclcpp::get_logger("RoboclawDriver"), "Serial Communication Error: %s",\n'}
[1.995076] (driver) StdoutLine: {'line': b'3: +        e.what());\n'}
[1.995213] (driver) StdoutLine: {'line': b'3: +      return false;\n'}
[1.995395] (driver) StdoutLine: {'line': b'3: +    }\n'}
[1.995545] (driver) StdoutLine: {'line': b'3: +  }\n'}
[1.995686] (driver) StdoutLine: {'line': b'3: +\n'}
[1.995828] (driver) StdoutLine: {'line': b'3: +  uint16_t calculateCRC(const vector<uint8_t> & data)\n'}
[1.995971] (driver) StdoutLine: {'line': b'3: +  {\n'}
[1.996112] (driver) StdoutLine: {'line': b'3: +    uint16_t crc = 0;\n'}
[1.996216] (driver) StdoutLine: {'line': b'3: +    for (auto byte : data) {\n'}
[1.996305] (driver) StdoutLine: {'line': b'3: +      crc ^= static_cast<uint16_t>(byte) << 8;\n'}
[1.996484] (driver) StdoutLine: {'line': b'3: +      for (int i = 0; i < 8; i++) {\n'}
[1.996632] (driver) StdoutLine: {'line': b'3: +        crc = (crc & 0x8000) ? (crc << 1) ^ 0x1021 : (crc << 1);\n'}
[1.996767] (driver) StdoutLine: {'line': b'3: +      }\n'}
[1.996915] (driver) StdoutLine: {'line': b'3: +    }\n'}
[1.997051] (driver) StdoutLine: {'line': b'3: +    return crc;\n'}
[1.997192] (driver) StdoutLine: {'line': b'3: +  }\n'}
[1.997326] (driver) StdoutLine: {'line': b'3: +\n'}
[1.997468] (driver) StdoutLine: {'line': b'3: +  // CRC\xe8\xbf\xbd\xe5\x8a\xa0\n'}
[1.997582] (driver) StdoutLine: {'line': b'3: +  void appendCRC(vector<uint8_t> & data)\n'}
[1.997701] (driver) StdoutLine: {'line': b'3: +  {\n'}
[1.997811] (driver) StdoutLine: {'line': b'3: +    uint16_t crc = calculateCRC(data);\n'}
[1.997922] (driver) StdoutLine: {'line': b'3: +    data.push_back(static_cast<uint8_t>(crc >> 8));\n'}
[1.998064] (driver) StdoutLine: {'line': b'3: +    data.push_back(static_cast<uint8_t>(crc & 0xFF));\n'}
[1.998204] (driver) StdoutLine: {'line': b'3: +  }\n'}
[1.998338] (driver) StdoutLine: {'line': b'3: +\n'}
[1.998472] (driver) StdoutLine: {'line': b'3: +  void appendInt32(vector<uint8_t> & data, int value)\n'}
[1.998635] (driver) StdoutLine: {'line': b'3: +  {\n'}
[1.998755] (driver) StdoutLine: {'line': b'3: +    for (int i = 3; i >= 0; --i) {\n'}
[1.998866] (driver) StdoutLine: {'line': b'3: +      data.push_back(static_cast<uint8_t>((value >> (8 * i)) & 0xFF));\n'}
[1.998977] (driver) StdoutLine: {'line': b'3: +    }\n'}
[1.999107] (driver) StdoutLine: {'line': b'3: +  }\n'}
[1.999244] (driver) StdoutLine: {'line': b'3: @@ -107 +119,2 @@\n'}
[1.999379] (driver) StdoutLine: {'line': b'3: -class Driver : public rclcpp::Node {\n'}
[1.999514] (driver) StdoutLine: {'line': b'3: +class Driver : public rclcpp::Node\n'}
[1.999646] (driver) StdoutLine: {'line': b'3: +{\n'}
[1.999757] (driver) StdoutLine: {'line': b'3: @@ -109,22 +122,25 @@\n'}
[1.999867] (driver) StdoutLine: {'line': b'3: -    Driver() : Node("driver"), roboclaw("/dev/ttyACM0") { \n'}
[1.999980] (driver) StdoutLine: {'line': b'3: -        declare_parameter("crawler_circumference", 0.39);\n'}
[2.000090] (driver) StdoutLine: {'line': b'3: -        declare_parameter("counts_per_rev", 256); // quad pulses per rev = counts per rev\n'}
[2.000233] (driver) StdoutLine: {'line': b'3: -        declare_parameter("gearhead_ratio", 66); // \xe6\xb8\x9b\xe9\x80\x9f\xe6\xaf\x94\n'}
[2.000371] (driver) StdoutLine: {'line': b'3: -        declare_parameter("pulley_ratio", 2);\n'}
[2.000506] (driver) StdoutLine: {'line': b'3: -\n'}
[2.000640] (driver) StdoutLine: {'line': b'3: -        crawler_circumference_ = get_parameter("crawler_circumference").as_double();\n'}
[2.000783] (driver) StdoutLine: {'line': b'3: -        counts_per_rev_ = get_parameter("counts_per_rev").as_int();\n'}
[2.000894] (driver) StdoutLine: {'line': b'3: -        gearhead_ratio_ = get_parameter("gearhead_ratio").as_int();\n'}
[2.001005] (driver) StdoutLine: {'line': b'3: -        pulley_ratio_ = get_parameter("pulley_ratio").as_int();\n'}
[2.001116] (driver) StdoutLine: {'line': b'3: -\n'}
[2.001239] (driver) StdoutLine: {'line': b'3: -        // velocity\xe3\x82\x92qpps\xe3\x81\xab\xe5\xa4\x89\xe6\x8f\x9b\xe3\x81\x99\xe3\x82\x8b\xe9\x9a\x9b\xe3\x81\xab\xe7\x94\xa8\xe3\x81\x84\xe3\x82\x8b\xe5\xae\x9a\xe6\x95\xb0\n'}
[2.001383] (driver) StdoutLine: {'line': b'3: -        counts_per_meter_ = (counts_per_rev_ * gearhead_ratio_ * pulley_ratio_) / crawler_circumference_;\n'}
[2.001519] (driver) StdoutLine: {'line': b'3: -\n'}
[2.001655] (driver) StdoutLine: {'line': b'3: -        subscription_ = create_subscription<custom_interfaces::msg::DriverVelocity>(\n'}
[2.001794] (driver) StdoutLine: {'line': b'3: -            "/operator", 10, bind(&Driver::driver_callback, this, _1));\n'}
[2.001915] (driver) StdoutLine: {'line': b'3: -\n'}
[2.002440] (driver) StdoutLine: {'line': b'3: -        estop_subscription_ = create_subscription<std_msgs::msg::Bool>(\n'}
[2.002569] (driver) StdoutLine: {'line': b'3: -            "/emergency_stop", 10, bind(&Driver::estop_callback, this, _1));\n'}
[2.002682] (driver) StdoutLine: {'line': b'3: -\n'}
[2.002793] (driver) StdoutLine: {'line': b'3: -        init();\n'}
[2.002913] (driver) StdoutLine: {'line': b'3: -    }\n'}
[2.003024] (driver) StdoutLine: {'line': b'3: +  Driver()\n'}
[2.003134] (driver) StdoutLine: {'line': b'3: +  : Node("driver"), roboclaw("/dev/ttyACM0")\n'}
[2.003245] (driver) StdoutLine: {'line': b'3: +  {\n'}
[2.003361] (driver) StdoutLine: {'line': b'3: +    declare_parameter("crawler_circumference", 0.39);\n'}
[2.003442] (-) TimerEvent: {}
[2.003568] (driver) StdoutLine: {'line': b'3: +    declare_parameter("counts_per_rev", 256);     // quad pulses per rev = counts per rev\n'}
[2.003707] (driver) StdoutLine: {'line': b'3: +    declare_parameter("gearhead_ratio", 66);     // \xe6\xb8\x9b\xe9\x80\x9f\xe6\xaf\x94\n'}
[2.003856] (driver) StdoutLine: {'line': b'3: +    declare_parameter("pulley_ratio", 2);\n'}
[2.003951] (driver) StdoutLine: {'line': b'3: +\n'}
[2.004017] (driver) StdoutLine: {'line': b'3: +    crawler_circumference_ = get_parameter("crawler_circumference").as_double();\n'}
[2.004081] (driver) StdoutLine: {'line': b'3: +    counts_per_rev_ = get_parameter("counts_per_rev").as_int();\n'}
[2.004146] (driver) StdoutLine: {'line': b'3: +    gearhead_ratio_ = get_parameter("gearhead_ratio").as_int();\n'}
[2.004209] (driver) StdoutLine: {'line': b'3: +    pulley_ratio_ = get_parameter("pulley_ratio").as_int();\n'}
[2.004271] (driver) StdoutLine: {'line': b'3: +\n'}
[2.004333] (driver) StdoutLine: {'line': b'3: +    // velocity\xe3\x82\x92qpps\xe3\x81\xab\xe5\xa4\x89\xe6\x8f\x9b\xe3\x81\x99\xe3\x82\x8b\xe9\x9a\x9b\xe3\x81\xab\xe7\x94\xa8\xe3\x81\x84\xe3\x82\x8b\xe5\xae\x9a\xe6\x95\xb0\n'}
[2.004398] (driver) StdoutLine: {'line': b'3: +    counts_per_meter_ = (counts_per_rev_ * gearhead_ratio_ * pulley_ratio_) /\n'}
[2.004532] (driver) StdoutLine: {'line': b'3: +      crawler_circumference_;\n'}
[2.004636] (driver) StdoutLine: {'line': b'3: +\n'}
[2.004739] (driver) StdoutLine: {'line': b'3: +    subscription_ = create_subscription<custom_interfaces::msg::DriverVelocity>(\n'}
[2.004845] (driver) StdoutLine: {'line': b'3: +      "/operator", 10, bind(&Driver::driver_callback, this, _1));\n'}
[2.004966] (driver) StdoutLine: {'line': b'3: +\n'}
[2.005069] (driver) StdoutLine: {'line': b'3: +    estop_subscription_ = create_subscription<std_msgs::msg::Bool>(\n'}
[2.005184] (driver) StdoutLine: {'line': b'3: +      "/emergency_stop", 10, bind(&Driver::estop_callback, this, _1));\n'}
[2.005338] (driver) StdoutLine: {'line': b'3: +\n'}
[2.005465] (driver) StdoutLine: {'line': b'3: +    init();\n'}
[2.005577] (driver) StdoutLine: {'line': b'3: +  }\n'}
[2.005677] (driver) StdoutLine: {'line': b'3: @@ -133,53 +149,57 @@\n'}
[2.005779] (driver) StdoutLine: {'line': b'3: -    RoboclawDriver roboclaw;\n'}
[2.005880] (driver) StdoutLine: {'line': b'3: -    double crawler_circumference_;\n'}
[2.005983] (driver) StdoutLine: {'line': b'3: -    int counts_per_rev_;\n'}
[2.006089] (driver) StdoutLine: {'line': b'3: -    int gearhead_ratio_;\n'}
[2.006191] (driver) StdoutLine: {'line': b'3: -    int pulley_ratio_;\n'}
[2.006291] (driver) StdoutLine: {'line': b'3: -    double counts_per_meter_;\n'}
[2.006398] (driver) StdoutLine: {'line': b'3: -    bool estop_active_ = false;  // E-stop state\n'}
[2.006502] (driver) StdoutLine: {'line': b'3: -\n'}
[2.006612] (driver) StdoutLine: {'line': b'3: -    rclcpp::Subscription<custom_interfaces::msg::DriverVelocity>::SharedPtr subscription_;\n'}
[2.006731] (driver) StdoutLine: {'line': b'3: -    rclcpp::Subscription<std_msgs::msg::Bool>::SharedPtr estop_subscription_;\n'}
[2.006835] (driver) StdoutLine: {'line': b'3: -\n'}
[2.006934] (driver) StdoutLine: {'line': b'3: -    double velocity_to_counts_per_sec(double velocity) const {\n'}
[2.007049] (driver) StdoutLine: {'line': b'3: -        return velocity * counts_per_meter_;\n'}
[2.007155] (driver) StdoutLine: {'line': b'3: -    }\n'}
[2.007272] (driver) StdoutLine: {'line': b'3: -\n'}
[2.007370] (driver) StdoutLine: {'line': b'3: -    void init() {\n'}
[2.007474] (driver) StdoutLine: {'line': b'3: -        roboclaw.setMotorVelocity(M1_MOTOR_COMMAND, 0);\n'}
[2.007576] (driver) StdoutLine: {'line': b'3: -        roboclaw.setMotorVelocity(M2_MOTOR_COMMAND, 0);\n'}
[2.007681] (driver) StdoutLine: {'line': b'3: -        roboclaw.setPIDConstants(M1_SET_PID_CONSTANTS_COMMAND, 0, 0, 0, QPPS);\n'}
[2.007787] (driver) StdoutLine: {'line': b'3: -        roboclaw.setPIDConstants(M2_SET_PID_CONSTANTS_COMMAND, 0, 0, 0, QPPS);\n'}
[2.007890] (driver) StdoutLine: {'line': b'3: -        roboclaw.resetEncoders();\n'}
[2.007995] (driver) StdoutLine: {'line': b'3: -    }\n'}
[2.008105] (driver) StdoutLine: {'line': b'3: -\n'}
[2.008214] (driver) StdoutLine: {'line': b'3: -    void driver_callback(const custom_interfaces::msg::DriverVelocity& msg) {\n'}
[2.008324] (driver) StdoutLine: {'line': b'3: -        if (estop_active_) {\n'}
[2.008431] (driver) StdoutLine: {'line': b'3: -            RCLCPP_WARN(get_logger(), "E-stop is active. Ignoring motor commands.");\n'}
[2.008540] (driver) StdoutLine: {'line': b'3: -            return;\n'}
[2.008698] (driver) StdoutLine: {'line': b'3: -        }\n'}
[2.008812] (driver) StdoutLine: {'line': b'3: -\n'}
[2.008925] (driver) StdoutLine: {'line': b'3: -        double M1_counts_per_sec = velocity_to_counts_per_sec(msg.m1_vel);\n'}
[2.009034] (driver) StdoutLine: {'line': b'3: -        double M2_counts_per_sec = velocity_to_counts_per_sec(msg.m2_vel);\n'}
[2.009144] (driver) StdoutLine: {'line': b'3: -\n'}
[2.009253] (driver) StdoutLine: {'line': b'3: -        if (!roboclaw.setMotorVelocity(M1_MOTOR_COMMAND, M1_counts_per_sec)) {\n'}
[2.009365] (driver) StdoutLine: {'line': b'3: -            RCLCPP_ERROR(get_logger(), "Failed to send command to M1 motor");\n'}
[2.009474] (driver) StdoutLine: {'line': b'3: -        }\n'}
[2.009573] (driver) StdoutLine: {'line': b'3: -        if (!roboclaw.setMotorVelocity(M2_MOTOR_COMMAND, M2_counts_per_sec)) {\n'}
[2.009666] (driver) StdoutLine: {'line': b'3: -            RCLCPP_ERROR(get_logger(), "Failed to send command to M2 motor");\n'}
[2.009792] (driver) StdoutLine: {'line': b'3: -        }\n'}
[2.009892] (driver) StdoutLine: {'line': b'3: -    }\n'}
[2.009995] (driver) StdoutLine: {'line': b'3: -\n'}
[2.010097] (driver) StdoutLine: {'line': b'3: -    void estop_callback(const std_msgs::msg::Bool::SharedPtr msg) {\n'}
[2.010207] (driver) StdoutLine: {'line': b'3: -        estop_active_ = msg->data;\n'}
[2.010313] (driver) StdoutLine: {'line': b'3: -\n'}
[2.010416] (driver) StdoutLine: {'line': b'3: -        if (estop_active_) {\n'}
[2.010520] (driver) StdoutLine: {'line': b'3: -            RCLCPP_WARN(get_logger(), "E-stop activated. Stopping all motors.");\n'}
[2.010629] (driver) StdoutLine: {'line': b'3: -\n'}
[2.010730] (driver) StdoutLine: {'line': b'3: -            // Send zero velocity commands to stop motors\n'}
[2.010861] (driver) StdoutLine: {'line': b'3: -            roboclaw.setMotorVelocity(M1_MOTOR_COMMAND, 0);\n'}
[2.010985] (driver) StdoutLine: {'line': b'3: -            roboclaw.setMotorVelocity(M2_MOTOR_COMMAND, 0);\n'}
[2.011104] (driver) StdoutLine: {'line': b'3: -        } else {\n'}
[2.011216] (driver) StdoutLine: {'line': b'3: -            RCLCPP_INFO(get_logger(), "E-stop deactivated. Resuming normal operation.");\n'}
[2.011322] (driver) StdoutLine: {'line': b'3: -        }\n'}
[2.011427] (driver) StdoutLine: {'line': b'3: -    }\n'}
[2.011533] (driver) StdoutLine: {'line': b'3: +  RoboclawDriver roboclaw;\n'}
[2.011637] (driver) StdoutLine: {'line': b'3: +  double crawler_circumference_;\n'}
[2.011743] (driver) StdoutLine: {'line': b'3: +  int counts_per_rev_;\n'}
[2.011853] (driver) StdoutLine: {'line': b'3: +  int gearhead_ratio_;\n'}
[2.012010] (driver) StdoutLine: {'line': b'3: +  int pulley_ratio_;\n'}
[2.012136] (driver) StdoutLine: {'line': b'3: +  double counts_per_meter_;\n'}
[2.012248] (driver) StdoutLine: {'line': b'3: +  bool estop_active_ = false;    // E-stop state\n'}
[2.012370] (driver) StdoutLine: {'line': b'3: +\n'}
[2.012485] (driver) StdoutLine: {'line': b'3: +  rclcpp::Subscription<custom_interfaces::msg::DriverVelocity>::SharedPtr subscription_;\n'}
[2.012617] (driver) StdoutLine: {'line': b'3: +  rclcpp::Subscription<std_msgs::msg::Bool>::SharedPtr estop_subscription_;\n'}
[2.012764] (driver) StdoutLine: {'line': b'3: +\n'}
[2.012912] (driver) StdoutLine: {'line': b'3: +  double velocity_to_counts_per_sec(double velocity) const\n'}
[2.013085] (driver) StdoutLine: {'line': b'3: +  {\n'}
[2.013255] (driver) StdoutLine: {'line': b'3: +    return velocity * counts_per_meter_;\n'}
[2.013399] (driver) StdoutLine: {'line': b'3: +  }\n'}
[2.013529] (driver) StdoutLine: {'line': b'3: +\n'}
[2.013649] (driver) StdoutLine: {'line': b'3: +  void init()\n'}
[2.013751] (driver) StdoutLine: {'line': b'3: +  {\n'}
[2.013855] (driver) StdoutLine: {'line': b'3: +    roboclaw.setMotorVelocity(M1_MOTOR_COMMAND, 0);\n'}
[2.013990] (driver) StdoutLine: {'line': b'3: +    roboclaw.setMotorVelocity(M2_MOTOR_COMMAND, 0);\n'}
[2.014149] (driver) StdoutLine: {'line': b'3: +    roboclaw.setPIDConstants(M1_SET_PID_CONSTANTS_COMMAND, 0, 0, 0, QPPS);\n'}
[2.014269] (driver) StdoutLine: {'line': b'3: +    roboclaw.setPIDConstants(M2_SET_PID_CONSTANTS_COMMAND, 0, 0, 0, QPPS);\n'}
[2.014380] (driver) StdoutLine: {'line': b'3: +    roboclaw.resetEncoders();\n'}
[2.014486] (driver) StdoutLine: {'line': b'3: +  }\n'}
[2.014600] (driver) StdoutLine: {'line': b'3: +\n'}
[2.014707] (driver) StdoutLine: {'line': b'3: +  void driver_callback(const custom_interfaces::msg::DriverVelocity & msg)\n'}
[2.014815] (driver) StdoutLine: {'line': b'3: +  {\n'}
[2.014922] (driver) StdoutLine: {'line': b'3: +    if (estop_active_) {\n'}
[2.015027] (driver) StdoutLine: {'line': b'3: +      RCLCPP_WARN(get_logger(), "E-stop is active. Ignoring motor commands.");\n'}
[2.015139] (driver) StdoutLine: {'line': b'3: +      return;\n'}
[2.015269] (driver) StdoutLine: {'line': b'3: +    }\n'}
[2.015401] (driver) StdoutLine: {'line': b'3: +\n'}
[2.015507] (driver) StdoutLine: {'line': b'3: +    double M1_counts_per_sec = velocity_to_counts_per_sec(msg.m1_vel);\n'}
[2.015609] (driver) StdoutLine: {'line': b'3: +    double M2_counts_per_sec = velocity_to_counts_per_sec(msg.m2_vel);\n'}
[2.015738] (driver) StdoutLine: {'line': b'3: +\n'}
[2.015849] (driver) StdoutLine: {'line': b'3: +    if (!roboclaw.setMotorVelocity(M1_MOTOR_COMMAND, M1_counts_per_sec)) {\n'}
[2.015953] (driver) StdoutLine: {'line': b'3: +      RCLCPP_ERROR(get_logger(), "Failed to send command to M1 motor");\n'}
[2.016076] (driver) StdoutLine: {'line': b'3: +    }\n'}
[2.016211] (driver) StdoutLine: {'line': b'3: +    if (!roboclaw.setMotorVelocity(M2_MOTOR_COMMAND, M2_counts_per_sec)) {\n'}
[2.016348] (driver) StdoutLine: {'line': b'3: +      RCLCPP_ERROR(get_logger(), "Failed to send command to M2 motor");\n'}
[2.016492] (driver) StdoutLine: {'line': b'3: +    }\n'}
[2.016629] (driver) StdoutLine: {'line': b'3: +  }\n'}
[2.016765] (driver) StdoutLine: {'line': b'3: +\n'}
[2.016901] (driver) StdoutLine: {'line': b'3: +  void estop_callback(const std_msgs::msg::Bool::SharedPtr msg)\n'}
[2.017044] (driver) StdoutLine: {'line': b'3: +  {\n'}
[2.017196] (driver) StdoutLine: {'line': b'3: +    estop_active_ = msg->data;\n'}
[2.017337] (driver) StdoutLine: {'line': b'3: +\n'}
[2.017476] (driver) StdoutLine: {'line': b'3: +    if (estop_active_) {\n'}
[2.017616] (driver) StdoutLine: {'line': b'3: +      RCLCPP_WARN(get_logger(), "E-stop activated. Stopping all motors.");\n'}
[2.017758] (driver) StdoutLine: {'line': b'3: +\n'}
[2.017897] (driver) StdoutLine: {'line': b'3: +      // Send zero velocity commands to stop motors\n'}
[2.018040] (driver) StdoutLine: {'line': b'3: +      roboclaw.setMotorVelocity(M1_MOTOR_COMMAND, 0);\n'}
[2.018184] (driver) StdoutLine: {'line': b'3: +      roboclaw.setMotorVelocity(M2_MOTOR_COMMAND, 0);\n'}
[2.018337] (driver) StdoutLine: {'line': b'3: +    } else {\n'}
[2.018514] (driver) StdoutLine: {'line': b'3: +      RCLCPP_INFO(get_logger(), "E-stop deactivated. Resuming normal operation.");\n'}
[2.018692] (driver) StdoutLine: {'line': b'3: +    }\n'}
[2.018841] (driver) StdoutLine: {'line': b'3: +  }\n'}
[2.018986] (driver) StdoutLine: {'line': b'3: @@ -188,5 +208,6 @@\n'}
[2.019107] (driver) StdoutLine: {'line': b'3: -int main(int argc, char* argv[]) {\n'}
[2.019246] (driver) StdoutLine: {'line': b'3: -    rclcpp::init(argc, argv);\n'}
[2.019381] (driver) StdoutLine: {'line': b'3: -    rclcpp::spin(std::make_shared<Driver>());\n'}
[2.019529] (driver) StdoutLine: {'line': b'3: -    rclcpp::shutdown();\n'}
[2.019670] (driver) StdoutLine: {'line': b'3: -    return 0;\n'}
[2.019794] (driver) StdoutLine: {'line': b'3: +int main(int argc, char * argv[])\n'}
[2.019922] (driver) StdoutLine: {'line': b'3: +{\n'}
[2.020096] (driver) StdoutLine: {'line': b'3: +  rclcpp::init(argc, argv);\n'}
[2.020234] (driver) StdoutLine: {'line': b'3: +  rclcpp::spin(std::make_shared<Driver>());\n'}
[2.020369] (driver) StdoutLine: {'line': b'3: +  rclcpp::shutdown();\n'}
[2.020504] (driver) StdoutLine: {'line': b'3: +  return 0;\n'}
[2.020638] (driver) StdoutLine: {'line': b'3: \n'}
[2.020756] (driver) StdoutLine: {'line': b'3: 1 files with code style divergence\n'}
[2.020905] (driver) StdoutLine: {'line': b'3: -- run_test.py: return code 1\n'}
[2.021041] (driver) StdoutLine: {'line': b"3: -- run_test.py: verify result file '/root/working/rodep_ros2/yano_ws/build/driver/test_results/driver/uncrustify.xunit.xml'\n"}
[2.021259] (driver) StdoutLine: {'line': b'3/4 Test #3: uncrustify .......................***Failed    0.27 sec\n'}
[2.021383] (driver) StdoutLine: {'line': b'test 4\n'}
[2.021493] (driver) StdoutLine: {'line': b'    Start 4: xmllint\n'}
[2.021604] (driver) StdoutLine: {'line': b'\n'}
[2.021728] (driver) StdoutLine: {'line': b'4: Test command: /usr/bin/python3 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/root/working/rodep_ros2/yano_ws/build/driver/test_results/driver/xmllint.xunit.xml" "--package-name" "driver" "--output-file" "/root/working/rodep_ros2/yano_ws/build/driver/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/root/working/rodep_ros2/yano_ws/build/driver/test_results/driver/xmllint.xunit.xml"\n'}
[2.021855] (driver) StdoutLine: {'line': b'4: Test timeout computed to be: 60\n'}
[2.096413] (operator) StdoutLine: {'line': b'3: CMakeLists.txt:23: Tab found; please use spaces [whitespace/tabs]\n'}
[2.096660] (operator) StdoutLine: {'line': b'3: CMakeLists.txt:24: Tab found; please use spaces [whitespace/tabs]\n'}
[2.096754] (operator) StdoutLine: {'line': b'3: CMakeLists.txt:24: Line ends in whitespace [whitespace/eol]\n'}
[2.096826] (operator) StdoutLine: {'line': b'3: \n'}
[2.096895] (operator) StdoutLine: {'line': b'3: \n'}
[2.096961] (operator) StdoutLine: {'line': b'3: 3 errors\n'}
[2.103582] (-) TimerEvent: {}
[2.117176] (operator) StdoutLine: {'line': b'3: -- run_test.py: return code 1\n'}
[2.117438] (operator) StdoutLine: {'line': b"3: -- run_test.py: verify result file '/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/lint_cmake.xunit.xml'\n"}
[2.125101] (driver) StdoutLine: {'line': b"4: -- run_test.py: invoking following command in '/root/working/rodep_ros2/yano_ws/src/driver':\n"}
[2.125366] (driver) StdoutLine: {'line': b'4:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /root/working/rodep_ros2/yano_ws/build/driver/test_results/driver/xmllint.xunit.xml\n'}
[2.131321] (operator) StdoutLine: {'line': b'3/6 Test #3: lint_cmake .......................***Failed    0.26 sec\n'}
[2.131718] (operator) StdoutLine: {'line': b'test 4\n'}
[2.131882] (operator) StdoutLine: {'line': b'    Start 4: pep257\n'}
[2.132057] (operator) StdoutLine: {'line': b'\n'}
[2.132145] (operator) StdoutLine: {'line': b'4: Test command: /usr/bin/python3 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/pep257.xunit.xml" "--package-name" "operator" "--output-file" "/root/working/rodep_ros2/yano_ws/build/operator/ament_pep257/pep257.txt" "--command" "/opt/ros/humble/bin/ament_pep257" "--xunit-file" "/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/pep257.xunit.xml"\n'}
[2.132258] (operator) StdoutLine: {'line': b'4: Test timeout computed to be: 60\n'}
[2.203671] (-) TimerEvent: {}
[2.239673] (operator) StdoutLine: {'line': b"4: -- run_test.py: invoking following command in '/root/working/rodep_ros2/yano_ws/src/operator':\n"}
[2.239892] (operator) StdoutLine: {'line': b'4:  - /opt/ros/humble/bin/ament_pep257 --xunit-file /root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/pep257.xunit.xml\n'}
[2.303774] (-) TimerEvent: {}
[2.382710] (operator) StdoutLine: {'line': b'4: checking ./launch/operator_launch.py\n'}
[2.382932] (operator) StdoutLine: {'line': b'4: No problems found\n'}
[2.402009] (operator) StdoutLine: {'line': b'4: -- run_test.py: return code 0\n'}
[2.402233] (operator) StdoutLine: {'line': b"4: -- run_test.py: verify result file '/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/pep257.xunit.xml'\n"}
[2.403905] (-) TimerEvent: {}
[2.418533] (operator) StdoutLine: {'line': b'4/6 Test #4: pep257 ...........................   Passed    0.29 sec\n'}
[2.418834] (operator) StdoutLine: {'line': b'test 5\n'}
[2.419048] (operator) StdoutLine: {'line': b'    Start 5: uncrustify\n'}
[2.419166] (operator) StdoutLine: {'line': b'\n'}
[2.419280] (operator) StdoutLine: {'line': b'5: Test command: /usr/bin/python3 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/uncrustify.xunit.xml" "--package-name" "operator" "--output-file" "/root/working/rodep_ros2/yano_ws/build/operator/ament_uncrustify/uncrustify.txt" "--command" "/opt/ros/humble/bin/ament_uncrustify" "--xunit-file" "/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/uncrustify.xunit.xml"\n'}
[2.419406] (operator) StdoutLine: {'line': b'5: Test timeout computed to be: 60\n'}
[2.489905] (operator) StdoutLine: {'line': b"5: -- run_test.py: invoking following command in '/root/working/rodep_ros2/yano_ws/src/operator':\n"}
[2.490101] (operator) StdoutLine: {'line': b'5:  - /opt/ros/humble/bin/ament_uncrustify --xunit-file /root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/uncrustify.xunit.xml\n'}
[2.504022] (-) TimerEvent: {}
[2.599514] (operator) StdoutLine: {'line': b"5: Code style divergence in file 'src/operator.cpp':\n"}
[2.601866] (operator) StdoutLine: {'line': b'5: \n'}
[2.602055] (operator) StdoutLine: {'line': b'5: --- src/operator.cpp\n'}
[2.602192] (operator) StdoutLine: {'line': b'5: +++ src/operator.cpp.uncrustify\n'}
[2.602266] (operator) StdoutLine: {'line': b'5: @@ -19 +19 @@\n'}
[2.602335] (operator) StdoutLine: {'line': b'5: -    enum class Mode { STOP, DRIVE };\n'}
[2.602401] (operator) StdoutLine: {'line': b'5: +  enum class Mode { STOP, DRIVE };\n'}
[2.602481] (operator) StdoutLine: {'line': b'5: @@ -21,5 +21,5 @@\n'}
[2.602564] (operator) StdoutLine: {'line': b'5: -    Operator()\n'}
[2.602631] (operator) StdoutLine: {'line': b'5: -        : Node("operator"), m1_vel(0.0f), m2_vel(0.0f), mode_(Mode::STOP)\n'}
[2.602698] (operator) StdoutLine: {'line': b'5: -    {\n'}
[2.602763] (operator) StdoutLine: {'line': b'5: -        subscription_ = this->create_subscription<sensor_msgs::msg::Joy>(\n'}
[2.602826] (operator) StdoutLine: {'line': b'5: -            "/joy", 10, std::bind(&Operator::joy_callback, this, _1));\n'}
[2.602890] (operator) StdoutLine: {'line': b'5: +  Operator()\n'}
[2.602953] (operator) StdoutLine: {'line': b'5: +  : Node("operator"), m1_vel(0.0f), m2_vel(0.0f), mode_(Mode::STOP)\n'}
[2.603016] (operator) StdoutLine: {'line': b'5: +  {\n'}
[2.603079] (operator) StdoutLine: {'line': b'5: +    subscription_ = this->create_subscription<sensor_msgs::msg::Joy>(\n'}
[2.603142] (operator) StdoutLine: {'line': b'5: +      "/joy", 10, std::bind(&Operator::joy_callback, this, _1));\n'}
[2.603223] (operator) StdoutLine: {'line': b'5: @@ -27,4 +27,31 @@\n'}
[2.603342] (operator) StdoutLine: {'line': b'5: -        publisher_ = this->create_publisher<custom_interfaces::msg::DriverVelocity>("/driver", 10);\n'}
[2.603454] (operator) StdoutLine: {'line': b'5: -        \n'}
[2.603570] (operator) StdoutLine: {'line': b'5: -        service_ = this->create_service<custom_interfaces::srv::SetMode>(\n'}
[2.603648] (operator) StdoutLine: {'line': b'5: -            "/set_mode", std::bind(&Operator::set_mode_callback, this, _1, _2));\n'}
[2.603715] (operator) StdoutLine: {'line': b'5: +    publisher_ = this->create_publisher<custom_interfaces::msg::DriverVelocity>("/driver", 10);\n'}
[2.603780] (operator) StdoutLine: {'line': b'5: +\n'}
[2.603843] (operator) StdoutLine: {'line': b'5: +    service_ = this->create_service<custom_interfaces::srv::SetMode>(\n'}
[2.603906] (operator) StdoutLine: {'line': b'5: +      "/set_mode", std::bind(&Operator::set_mode_callback, this, _1, _2));\n'}
[2.603969] (operator) StdoutLine: {'line': b'5: +  }\n'}
[2.604029] (-) TimerEvent: {}
[2.604168] (operator) StdoutLine: {'line': b'5: +\n'}
[2.604319] (operator) StdoutLine: {'line': b'5: +private:\n'}
[2.604468] (operator) StdoutLine: {'line': b'5: +  static constexpr float WIDTH = 0.29f;\n'}
[2.604602] (operator) StdoutLine: {'line': b'5: +  static constexpr float MAX_SPEED = 0.5f;\n'}
[2.604730] (operator) StdoutLine: {'line': b'5: +  static constexpr float DEADZONE = 0.1f;\n'}
[2.604855] (operator) StdoutLine: {'line': b'5: +\n'}
[2.604971] (operator) StdoutLine: {'line': b'5: +  float m1_vel, m2_vel;\n'}
[2.605091] (operator) StdoutLine: {'line': b'5: +  Mode mode_;\n'}
[2.605212] (operator) StdoutLine: {'line': b'5: +\n'}
[2.605403] (operator) StdoutLine: {'line': b'5: +  static float applyDeadzone(float val, float threshold)\n'}
[2.605536] (operator) StdoutLine: {'line': b'5: +  {\n'}
[2.605659] (operator) StdoutLine: {'line': b'5: +    return (std::abs(val) < threshold) ? 0.0f : val;\n'}
[2.605788] (operator) StdoutLine: {'line': b'5: +  }\n'}
[2.605909] (operator) StdoutLine: {'line': b'5: +\n'}
[2.606047] (operator) StdoutLine: {'line': b'5: +  void joy_callback(const sensor_msgs::msg::Joy & msg)\n'}
[2.606168] (operator) StdoutLine: {'line': b'5: +  {\n'}
[2.606288] (operator) StdoutLine: {'line': b'5: +    // \xe3\x83\x9c\xe3\x82\xbf\xe3\x83\xb3\xe3\x82\x92\xe3\x83\x81\xe3\x82\xa7\xe3\x83\x83\xe3\x82\xaf\xe3\x81\x97\xe3\x81\xa6\xe3\x83\xa2\xe3\x83\xbc\xe3\x83\x89\xe3\x82\x92\xe5\x88\x87\xe3\x82\x8a\xe6\x9b\xbf\xe3\x81\x88\xe3\x82\x8b\n'}
[2.606441] (operator) StdoutLine: {'line': b'5: +    if (msg.buttons.size() > 0) {\n'}
[2.606575] (operator) StdoutLine: {'line': b'5: +      // \xe3\x83\x86\xe3\x82\xb9\xe3\x83\x88\n'}
[2.606695] (operator) StdoutLine: {'line': b'5: +      if (msg.buttons[4] == 1) {      // \xe3\x83\x9c\xe3\x82\xbf\xe3\x83\xb30\xe3\x81\x8c\xe6\x8a\xbc\xe3\x81\x95\xe3\x82\x8c\xe3\x81\x9f\xe5\xa0\xb4\xe5\x90\x88\n'}
[2.606824] (operator) StdoutLine: {'line': b'5: +        mode_ = Mode::STOP;\n'}
[2.606944] (operator) StdoutLine: {'line': b'5: +        RCLCPP_INFO(this->get_logger(), "Mode switched to STOP");\n'}
[2.607066] (operator) StdoutLine: {'line': b'5: +      } else if (msg.buttons[6] == 1) {    // \xe3\x83\x9c\xe3\x82\xbf\xe3\x83\xb31\xe3\x81\x8c\xe6\x8a\xbc\xe3\x81\x95\xe3\x82\x8c\xe3\x81\x9f\xe5\xa0\xb4\xe5\x90\x88\n'}
[2.607194] (operator) StdoutLine: {'line': b'5: +        mode_ = Mode::DRIVE;\n'}
[2.607312] (operator) StdoutLine: {'line': b'5: +        RCLCPP_INFO(this->get_logger(), "Mode switched to DRIVE");\n'}
[2.607433] (operator) StdoutLine: {'line': b'5: +      }\n'}
[2.607561] (operator) StdoutLine: {'line': b'5: @@ -33,4 +60,9 @@\n'}
[2.607685] (operator) StdoutLine: {'line': b'5: -private:\n'}
[2.607806] (operator) StdoutLine: {'line': b'5: -    static constexpr float WIDTH = 0.29f;\n'}
[2.607937] (operator) StdoutLine: {'line': b'5: -    static constexpr float MAX_SPEED = 0.5f;\n'}
[2.608063] (operator) StdoutLine: {'line': b'5: -    static constexpr float DEADZONE = 0.1f;\n'}
[2.608190] (operator) StdoutLine: {'line': b'5: +    // \xe3\x83\xa2\xe3\x83\xbc\xe3\x83\x89\xe3\x81\x8cSTOP\xe3\x81\xae\xe5\xa0\xb4\xe5\x90\x88\xe3\x81\xaf\xe9\x80\x9f\xe5\xba\xa6\xe3\x82\x920\xe3\x81\xab\xe8\xa8\xad\xe5\xae\x9a\n'}
[2.608324] (operator) StdoutLine: {'line': b'5: +    if (mode_ == Mode::STOP) {\n'}
[2.608440] (operator) StdoutLine: {'line': b'5: +      m1_vel = 0.0f;\n'}
[2.608552] (operator) StdoutLine: {'line': b'5: +      m2_vel = 0.0f;\n'}
[2.608704] (operator) StdoutLine: {'line': b'5: +    } else if (mode_ == Mode::DRIVE) {\n'}
[2.608817] (operator) StdoutLine: {'line': b'5: +      if (msg.axes.size() < 4) {\n'}
[2.608940] (operator) StdoutLine: {'line': b'5: +        RCLCPP_WARN(this->get_logger(), "Joystick axes array is too small!");\n'}
[2.609051] (operator) StdoutLine: {'line': b'5: +        return;\n'}
[2.609122] (operator) StdoutLine: {'line': b'5: +      }\n'}
[2.609187] (operator) StdoutLine: {'line': b'5: @@ -38,2 +70,2 @@\n'}
[2.609251] (operator) StdoutLine: {'line': b'5: -    float m1_vel, m2_vel;\n'}
[2.609313] (operator) StdoutLine: {'line': b'5: -    Mode mode_;\n'}
[2.609375] (operator) StdoutLine: {'line': b'5: +      float m1_axis_y = applyDeadzone(std::clamp<float>(msg.axes[1], -0.95f, 0.95f), DEADZONE);\n'}
[2.609439] (operator) StdoutLine: {'line': b'5: +      float m2_axis_y = applyDeadzone(std::clamp<float>(msg.axes[3], -0.95f, 0.95f), DEADZONE);\n'}
[2.609502] (operator) StdoutLine: {'line': b'5: @@ -41,3 +73,2 @@\n'}
[2.609564] (operator) StdoutLine: {'line': b'5: -    static float applyDeadzone(float val, float threshold)\n'}
[2.609626] (operator) StdoutLine: {'line': b'5: -    {\n'}
[2.609746] (operator) StdoutLine: {'line': b'5: -        return (std::abs(val) < threshold) ? 0.0f : val;\n'}
[2.609865] (operator) StdoutLine: {'line': b'5: +      m1_vel = std::clamp<float>(m1_axis_y * MAX_SPEED, -MAX_SPEED, MAX_SPEED);\n'}
[2.610001] (operator) StdoutLine: {'line': b'5: +      m2_vel = std::clamp<float>(m2_axis_y * MAX_SPEED, -MAX_SPEED, MAX_SPEED);\n'}
[2.610178] (operator) StdoutLine: {'line': b'5: @@ -46,17 +77,5 @@\n'}
[2.610337] (operator) StdoutLine: {'line': b'5: -    void joy_callback(const sensor_msgs::msg::Joy &msg)\n'}
[2.610502] (operator) StdoutLine: {'line': b'5: -    {\n'}
[2.610676] (operator) StdoutLine: {'line': b'5: -        // \xe3\x83\x9c\xe3\x82\xbf\xe3\x83\xb3\xe3\x82\x92\xe3\x83\x81\xe3\x82\xa7\xe3\x83\x83\xe3\x82\xaf\xe3\x81\x97\xe3\x81\xa6\xe3\x83\xa2\xe3\x83\xbc\xe3\x83\x89\xe3\x82\x92\xe5\x88\x87\xe3\x82\x8a\xe6\x9b\xbf\xe3\x81\x88\xe3\x82\x8b\n'}
[2.610849] (operator) StdoutLine: {'line': b'5: -        if (msg.buttons.size() > 0)\n'}
[2.611011] (operator) StdoutLine: {'line': b'5: -        {\n'}
[2.611171] (operator) StdoutLine: {'line': b'5: -            // \xe3\x83\x86\xe3\x82\xb9\xe3\x83\x88\n'}
[2.611291] (operator) StdoutLine: {'line': b'5: -            if (msg.buttons[4] == 1)  // \xe3\x83\x9c\xe3\x82\xbf\xe3\x83\xb30\xe3\x81\x8c\xe6\x8a\xbc\xe3\x81\x95\xe3\x82\x8c\xe3\x81\x9f\xe5\xa0\xb4\xe5\x90\x88\n'}
[2.611409] (operator) StdoutLine: {'line': b'5: -            {\n'}
[2.611511] (operator) StdoutLine: {'line': b'5: -                mode_ = Mode::STOP;\n'}
[2.611614] (operator) StdoutLine: {'line': b'5: -                RCLCPP_INFO(this->get_logger(), "Mode switched to STOP");\n'}
[2.611717] (operator) StdoutLine: {'line': b'5: -            }\n'}
[2.611878] (operator) StdoutLine: {'line': b'5: -            else if (msg.buttons[6] == 1)  // \xe3\x83\x9c\xe3\x82\xbf\xe3\x83\xb31\xe3\x81\x8c\xe6\x8a\xbc\xe3\x81\x95\xe3\x82\x8c\xe3\x81\x9f\xe5\xa0\xb4\xe5\x90\x88\n'}
[2.612064] (operator) StdoutLine: {'line': b'5: -            {\n'}
[2.612201] (operator) StdoutLine: {'line': b'5: -                mode_ = Mode::DRIVE;\n'}
[2.612345] (operator) StdoutLine: {'line': b'5: -                RCLCPP_INFO(this->get_logger(), "Mode switched to DRIVE");\n'}
[2.612505] (operator) StdoutLine: {'line': b'5: -            }\n'}
[2.612606] (operator) StdoutLine: {'line': b'5: -        }\n'}
[2.612685] (operator) StdoutLine: {'line': b'5: +    auto message = custom_interfaces::msg::DriverVelocity();\n'}
[2.612758] (operator) StdoutLine: {'line': b'5: +    message.m1_vel = m1_vel;\n'}
[2.612849] (operator) StdoutLine: {'line': b'5: +    message.m2_vel = m2_vel;\n'}
[2.612967] (operator) StdoutLine: {'line': b'5: +    publisher_->publish(message);\n'}
[2.613051] (operator) StdoutLine: {'line': b'5: +  }\n'}
[2.613123] (operator) StdoutLine: {'line': b'5: @@ -64,13 +83,17 @@\n'}
[2.613214] (operator) StdoutLine: {'line': b'5: -        // \xe3\x83\xa2\xe3\x83\xbc\xe3\x83\x89\xe3\x81\x8cSTOP\xe3\x81\xae\xe5\xa0\xb4\xe5\x90\x88\xe3\x81\xaf\xe9\x80\x9f\xe5\xba\xa6\xe3\x82\x920\xe3\x81\xab\xe8\xa8\xad\xe5\xae\x9a\n'}
[2.613295] (operator) StdoutLine: {'line': b'5: -        if (mode_ == Mode::STOP)\n'}
[2.613370] (operator) StdoutLine: {'line': b'5: -        {\n'}
[2.613449] (operator) StdoutLine: {'line': b'5: -            m1_vel = 0.0f;\n'}
[2.613517] (operator) StdoutLine: {'line': b'5: -            m2_vel = 0.0f;\n'}
[2.613583] (operator) StdoutLine: {'line': b'5: -        }\n'}
[2.613651] (operator) StdoutLine: {'line': b'5: -        else if (mode_ == Mode::DRIVE)\n'}
[2.613734] (operator) StdoutLine: {'line': b'5: -        {\n'}
[2.613860] (operator) StdoutLine: {'line': b'5: -            if (msg.axes.size() < 4)\n'}
[2.613974] (operator) StdoutLine: {'line': b'5: -            {\n'}
[2.614093] (operator) StdoutLine: {'line': b'5: -                RCLCPP_WARN(this->get_logger(), "Joystick axes array is too small!");\n'}
[2.614163] (operator) StdoutLine: {'line': b'5: -                return;\n'}
[2.614228] (operator) StdoutLine: {'line': b'5: -            }\n'}
[2.614293] (operator) StdoutLine: {'line': b'5: +  void set_mode_callback(\n'}
[2.614358] (operator) StdoutLine: {'line': b'5: +    const std::shared_ptr<custom_interfaces::srv::SetMode::Request> request,\n'}
[2.614422] (operator) StdoutLine: {'line': b'5: +    std::shared_ptr<custom_interfaces::srv::SetMode::Response> response)\n'}
[2.614488] (operator) StdoutLine: {'line': b'5: +  {\n'}
[2.614552] (operator) StdoutLine: {'line': b'5: +    if (request->mode == "STOP") {\n'}
[2.614618] (operator) StdoutLine: {'line': b'5: +      mode_ = Mode::STOP;\n'}
[2.614726] (operator) StdoutLine: {'line': b'5: +      response->success = true;\n'}
[2.614831] (operator) StdoutLine: {'line': b'5: +      RCLCPP_INFO(this->get_logger(), "Mode set to STOP");\n'}
[2.614899] (operator) StdoutLine: {'line': b'5: +    } else if (request->mode == "DRIVE") {\n'}
[2.614962] (operator) StdoutLine: {'line': b'5: +      mode_ = Mode::DRIVE;\n'}
[2.615035] (operator) StdoutLine: {'line': b'5: +      response->success = true;\n'}
[2.615104] (operator) StdoutLine: {'line': b'5: +      RCLCPP_INFO(this->get_logger(), "Mode set to DRIVE");\n'}
[2.615221] (operator) StdoutLine: {'line': b'5: +    } else {\n'}
[2.615333] (operator) StdoutLine: {'line': b'5: +      response->success = false;\n'}
[2.615400] (operator) StdoutLine: {'line': b'5: +      RCLCPP_WARN(this->get_logger(), "Invalid mode requested");\n'}
[2.615464] (operator) StdoutLine: {'line': b'5: +    }\n'}
[2.615526] (operator) StdoutLine: {'line': b'5: +  }\n'}
[2.615589] (operator) StdoutLine: {'line': b'5: @@ -78,38 +101,3 @@\n'}
[2.615650] (operator) StdoutLine: {'line': b'5: -            float m1_axis_y = applyDeadzone(std::clamp<float>(msg.axes[1], -0.95f, 0.95f), DEADZONE);\n'}
[2.615714] (operator) StdoutLine: {'line': b'5: -            float m2_axis_y = applyDeadzone(std::clamp<float>(msg.axes[3], -0.95f, 0.95f), DEADZONE);\n'}
[2.615777] (operator) StdoutLine: {'line': b'5: -\n'}
[2.615837] (operator) StdoutLine: {'line': b'5: -            m1_vel = std::clamp<float>(m1_axis_y * MAX_SPEED, -MAX_SPEED, MAX_SPEED);\n'}
[2.615900] (operator) StdoutLine: {'line': b'5: -            m2_vel = std::clamp<float>(m2_axis_y * MAX_SPEED, -MAX_SPEED, MAX_SPEED);\n'}
[2.615962] (operator) StdoutLine: {'line': b'5: -        }\n'}
[2.616023] (operator) StdoutLine: {'line': b'5: -\n'}
[2.616083] (operator) StdoutLine: {'line': b'5: -        auto message = custom_interfaces::msg::DriverVelocity();\n'}
[2.616155] (operator) StdoutLine: {'line': b'5: -        message.m1_vel = m1_vel;\n'}
[2.616249] (operator) StdoutLine: {'line': b'5: -        message.m2_vel = m2_vel;\n'}
[2.616313] (operator) StdoutLine: {'line': b'5: -        publisher_->publish(message);\n'}
[2.616374] (operator) StdoutLine: {'line': b'5: -    }\n'}
[2.616435] (operator) StdoutLine: {'line': b'5: -\n'}
[2.616497] (operator) StdoutLine: {'line': b'5: -    void set_mode_callback(const std::shared_ptr<custom_interfaces::srv::SetMode::Request> request,\n'}
[2.616562] (operator) StdoutLine: {'line': b'5: -                           std::shared_ptr<custom_interfaces::srv::SetMode::Response> response)\n'}
[2.616624] (operator) StdoutLine: {'line': b'5: -    {\n'}
[2.616684] (operator) StdoutLine: {'line': b'5: -        if (request->mode == "STOP")\n'}
[2.616745] (operator) StdoutLine: {'line': b'5: -        {\n'}
[2.616806] (operator) StdoutLine: {'line': b'5: -            mode_ = Mode::STOP;\n'}
[2.616867] (operator) StdoutLine: {'line': b'5: -            response->success = true;\n'}
[2.616928] (operator) StdoutLine: {'line': b'5: -            RCLCPP_INFO(this->get_logger(), "Mode set to STOP");\n'}
[2.616990] (operator) StdoutLine: {'line': b'5: -        }\n'}
[2.617050] (operator) StdoutLine: {'line': b'5: -        else if (request->mode == "DRIVE")\n'}
[2.617112] (operator) StdoutLine: {'line': b'5: -        {\n'}
[2.617173] (operator) StdoutLine: {'line': b'5: -            mode_ = Mode::DRIVE;\n'}
[2.617234] (operator) StdoutLine: {'line': b'5: -            response->success = true;\n'}
[2.617317] (operator) StdoutLine: {'line': b'5: -            RCLCPP_INFO(this->get_logger(), "Mode set to DRIVE");\n'}
[2.617380] (operator) StdoutLine: {'line': b'5: -        }\n'}
[2.617442] (operator) StdoutLine: {'line': b'5: -        else\n'}
[2.617503] (operator) StdoutLine: {'line': b'5: -        {\n'}
[2.617564] (operator) StdoutLine: {'line': b'5: -            response->success = false;\n'}
[2.617625] (operator) StdoutLine: {'line': b'5: -            RCLCPP_WARN(this->get_logger(), "Invalid mode requested");\n'}
[2.617688] (operator) StdoutLine: {'line': b'5: -        }\n'}
[2.617748] (operator) StdoutLine: {'line': b'5: -    }\n'}
[2.617809] (operator) StdoutLine: {'line': b'5: -\n'}
[2.617869] (operator) StdoutLine: {'line': b'5: -    rclcpp::Subscription<sensor_msgs::msg::Joy>::SharedPtr subscription_;\n'}
[2.617931] (operator) StdoutLine: {'line': b'5: -    rclcpp::Publisher<custom_interfaces::msg::DriverVelocity>::SharedPtr publisher_;\n'}
[2.617994] (operator) StdoutLine: {'line': b'5: -    rclcpp::Service<custom_interfaces::srv::SetMode>::SharedPtr service_;\n'}
[2.618055] (operator) StdoutLine: {'line': b'5: +  rclcpp::Subscription<sensor_msgs::msg::Joy>::SharedPtr subscription_;\n'}
[2.618116] (operator) StdoutLine: {'line': b'5: +  rclcpp::Publisher<custom_interfaces::msg::DriverVelocity>::SharedPtr publisher_;\n'}
[2.618177] (operator) StdoutLine: {'line': b'5: +  rclcpp::Service<custom_interfaces::srv::SetMode>::SharedPtr service_;\n'}
[2.618238] (operator) StdoutLine: {'line': b'5: @@ -118 +106 @@\n'}
[2.618299] (operator) StdoutLine: {'line': b'5: -int main(int argc, char *argv[])\n'}
[2.618430] (operator) StdoutLine: {'line': b'5: +int main(int argc, char * argv[])\n'}
[2.618570] (operator) StdoutLine: {'line': b'5: @@ -120,4 +108,4 @@\n'}
[2.618777] (operator) StdoutLine: {'line': b'5: -    rclcpp::init(argc, argv);\n'}
[2.618846] (operator) StdoutLine: {'line': b'5: -    rclcpp::spin(std::make_shared<Operator>());\n'}
[2.618960] (operator) StdoutLine: {'line': b'5: -    rclcpp::shutdown();\n'}
[2.619060] (operator) StdoutLine: {'line': b'5: -    return 0;\n'}
[2.619126] (operator) StdoutLine: {'line': b'5: +  rclcpp::init(argc, argv);\n'}
[2.619189] (operator) StdoutLine: {'line': b'5: +  rclcpp::spin(std::make_shared<Operator>());\n'}
[2.619251] (operator) StdoutLine: {'line': b'5: +  rclcpp::shutdown();\n'}
[2.619315] (operator) StdoutLine: {'line': b'5: +  return 0;\n'}
[2.619377] (operator) StdoutLine: {'line': b'5: \n'}
[2.619462] (operator) StdoutLine: {'line': b'5: 1 files with code style divergence\n'}
[2.619538] (operator) StdoutLine: {'line': b'5: -- run_test.py: return code 1\n'}
[2.619601] (operator) StdoutLine: {'line': b"5: -- run_test.py: verify result file '/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/uncrustify.xunit.xml'\n"}
[2.629396] (operator) StdoutLine: {'line': b'5/6 Test #5: uncrustify .......................***Failed    0.21 sec\n'}
[2.629798] (operator) StdoutLine: {'line': b'test 6\n'}
[2.629951] (operator) StdoutLine: {'line': b'    Start 6: xmllint\n'}
[2.630096] (operator) StdoutLine: {'line': b'\n'}
[2.630264] (operator) StdoutLine: {'line': b'6: Test command: /usr/bin/python3 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/xmllint.xunit.xml" "--package-name" "operator" "--output-file" "/root/working/rodep_ros2/yano_ws/build/operator/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/xmllint.xunit.xml"\n'}
[2.630354] (operator) StdoutLine: {'line': b'6: Test timeout computed to be: 60\n'}
[2.700876] (operator) StdoutLine: {'line': b"6: -- run_test.py: invoking following command in '/root/working/rodep_ros2/yano_ws/src/operator':\n"}
[2.701045] (operator) StdoutLine: {'line': b'6:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/xmllint.xunit.xml\n'}
[2.704172] (-) TimerEvent: {}
[2.757070] (driver) StdoutLine: {'line': b"4: File 'package.xml' is valid\n"}
[2.757310] (driver) StdoutLine: {'line': b'4: \n'}
[2.757450] (driver) StdoutLine: {'line': b'4: No problems found\n'}
[2.771325] (driver) StdoutLine: {'line': b'4: -- run_test.py: return code 0\n'}
[2.771677] (driver) StdoutLine: {'line': b"4: -- run_test.py: verify result file '/root/working/rodep_ros2/yano_ws/build/driver/test_results/driver/xmllint.xunit.xml'\n"}
[2.783416] (driver) StdoutLine: {'line': b'4/4 Test #4: xmllint ..........................   Passed    0.76 sec\n'}
[2.783967] (driver) StdoutLine: {'line': b'\n'}
[2.784171] (driver) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m2 tests failed\x1b[0;0m out of 4\n'}
[2.784318] (driver) StdoutLine: {'line': b'\n'}
[2.784456] (driver) StdoutLine: {'line': b'Label Time Summary:\n'}
[2.784593] (driver) StdoutLine: {'line': b'cppcheck      =   0.25 sec*proc (1 test)\n'}
[2.784728] (driver) StdoutLine: {'line': b'lint_cmake    =   0.23 sec*proc (1 test)\n'}
[2.784873] (driver) StdoutLine: {'line': b'linter        =   1.51 sec*proc (4 tests)\n'}
[2.785031] (driver) StdoutLine: {'line': b'uncrustify    =   0.27 sec*proc (1 test)\n'}
[2.785166] (driver) StdoutLine: {'line': b'xmllint       =   0.76 sec*proc (1 test)\n'}
[2.785328] (driver) StdoutLine: {'line': b'\n'}
[2.785442] (driver) StdoutLine: {'line': b'Total Test time (real) =   1.51 sec\n'}
[2.785545] (driver) StdoutLine: {'line': b'\n'}
[2.785649] (driver) StdoutLine: {'line': b'The following tests FAILED:\n'}
[2.785845] (driver) StdoutLine: {'line': b'\t\x1b[0;31m  2 - lint_cmake (Failed)\x1b[0;0m\n'}
[2.785978] (driver) StdoutLine: {'line': b'\t\x1b[0;31m  3 - uncrustify (Failed)\x1b[0;0m\n'}
[2.786169] (driver) StderrLine: {'line': b'Errors while running CTest\n'}
[2.786411] (driver) StderrLine: {'line': b'Output from these tests are in: /root/working/rodep_ros2/yano_ws/build/driver/Testing/Temporary/LastTest.log\n'}
[2.786568] (driver) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[2.789626] (driver) CommandEnded: {'returncode': 8}
[2.790094] (driver) TestFailure: {'identifier': 'driver'}
[2.790143] (driver) JobEnded: {'identifier': 'driver', 'rc': 0}
[2.804267] (-) TimerEvent: {}
[2.904639] (-) TimerEvent: {}
[3.005062] (-) TimerEvent: {}
[3.105419] (-) TimerEvent: {}
[3.131307] (operator) StdoutLine: {'line': b"6: File 'package.xml' is valid\n"}
[3.131470] (operator) StdoutLine: {'line': b'6: \n'}
[3.131555] (operator) StdoutLine: {'line': b'6: No problems found\n'}
[3.144074] (operator) StdoutLine: {'line': b'6: -- run_test.py: return code 0\n'}
[3.144381] (operator) StdoutLine: {'line': b"6: -- run_test.py: verify result file '/root/working/rodep_ros2/yano_ws/build/operator/test_results/operator/xmllint.xunit.xml'\n"}
[3.154441] (operator) StdoutLine: {'line': b'6/6 Test #6: xmllint ..........................   Passed    0.52 sec\n'}
[3.154856] (operator) StdoutLine: {'line': b'\n'}
[3.155020] (operator) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m3 tests failed\x1b[0;0m out of 6\n'}
[3.155147] (operator) StdoutLine: {'line': b'\n'}
[3.155387] (operator) StdoutLine: {'line': b'Label Time Summary:\n'}
[3.155596] (operator) StdoutLine: {'line': b'cppcheck      =   0.24 sec*proc (1 test)\n'}
[3.155710] (operator) StdoutLine: {'line': b'flake8        =   0.36 sec*proc (1 test)\n'}
[3.155821] (operator) StdoutLine: {'line': b'lint_cmake    =   0.26 sec*proc (1 test)\n'}
[3.155932] (operator) StdoutLine: {'line': b'linter        =   1.87 sec*proc (6 tests)\n'}
[3.156049] (operator) StdoutLine: {'line': b'pep257        =   0.29 sec*proc (1 test)\n'}
[3.156159] (operator) StdoutLine: {'line': b'uncrustify    =   0.21 sec*proc (1 test)\n'}
[3.156268] (operator) StdoutLine: {'line': b'xmllint       =   0.52 sec*proc (1 test)\n'}
[3.156373] (operator) StdoutLine: {'line': b'\n'}
[3.156441] (operator) StdoutLine: {'line': b'Total Test time (real) =   1.88 sec\n'}
[3.156505] (operator) StdoutLine: {'line': b'\n'}
[3.156567] (operator) StdoutLine: {'line': b'The following tests FAILED:\n'}
[3.156630] (operator) StdoutLine: {'line': b'\t\x1b[0;31m  2 - flake8 (Failed)\x1b[0;0m\n'}
[3.156692] (operator) StdoutLine: {'line': b'\t\x1b[0;31m  3 - lint_cmake (Failed)\x1b[0;0m\n'}
[3.156754] (operator) StdoutLine: {'line': b'\t\x1b[0;31m  5 - uncrustify (Failed)\x1b[0;0m\n'}
[3.158420] (operator) StderrLine: {'line': b'Errors while running CTest\n'}
[3.158594] (operator) StderrLine: {'line': b'Output from these tests are in: /root/working/rodep_ros2/yano_ws/build/operator/Testing/Temporary/LastTest.log\n'}
[3.158682] (operator) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[3.160860] (operator) CommandEnded: {'returncode': 8}
[3.161745] (operator) TestFailure: {'identifier': 'operator'}
[3.162002] (operator) JobEnded: {'identifier': 'operator', 'rc': 0}
[3.162780] (-) EventReactorShutdown: {}
